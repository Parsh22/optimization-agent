[
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- A seaport unloads shipping containers off of rail cars, holds them in its yard on a transport system, and then loads them onto ships.\n- The demand \\var{demand_{t}} for containers by ships varies every month, and this demand must be fulfilled.\n- The unloading cost \\var{unload_cost_{t}} per container indicates how much it costs to unload a single container from the rail car.\n- The unloading capacity \\var{unload_capacity_{t}} specifies the maximum number of containers that can be unloaded in a month.\n- For each container kept in the yard until the subsequent month, there is a holding cost of $\\var{holding_cost}.\n- Due to space limitations, the yard can store a maximum of \\var{max_container} containers at the end of any month.\n- Initially, at the start of the first month, the yard has \\var{init_container} containers.\n- The yard should not contain any containers after the end of the last month.\n- Additionally, loading containers onto ships necessitates the rental of cranes.\n- A maximum of \\var{num_cranes} cranes can be rented each month, each having a capacity to load \\var{crane_capacity} containers.\n- It costs \\var{crane_cost} for each crane.\n\nINPUT FORMAT: \n\n{\n    \"demands\": [demand_{t} for t in 1, ..., T],\n    \"unload_costs\": [unload_cost_{t} for t in 1, ..., T],\n    \"unload_capacity\": [unload_capacity_{t} for t in 1, ..., T],\n    \"holding_cost\": holding_cost,\n    \"max_container\": max_container,\n    \"init_container\": init_container,\n    \"num_cranes\": num_cranes,\n    \"crane_capacity\": crane_capacity,\n    \"crane_cost\": crane_cost,\n}\n\nOBJECTIVE: Determine a strategy to minimize costs from unloading, storage, and crane rentals over the period.\n\nOUTPUT INFO:\n\n- \\var{amount_{t}} indicates the number of containers unloaded for each month.\n- \\var{crane_{t}} specifies the number of cranes rented for each month.\n- \\var{total_cost} shows the total cost of the company over the period.\n\nOUTPUT FORMAT:\n\n{\n    \"containers_unloaded\": [amount_{t} for t in 1, ..., T],\n    \"cranes_rented\": [crane_{t} for t in 1, ..., T],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A logistics strategy is required to minimize the total costs associated with unloading, storage, and crane rentals while meeting demands and adhering to capacity constraints.\", \"constraints\": [\"Demands must be met for each time period\", \"Unloading capacity per period cannot exceed the specified UnloadCapacity\", \"Maximum container inventory must not exceed MaxContainer\"], \"objective\": \"Minimize the total costs of UnloadCosts, HoldingCost, and CraneCost\", \"description\": \"Determine a strategy to minimize costs from unloading (\\\\param{UnloadCosts}), storage (\\\\param{HoldingCost}), and crane rentals (\\\\param{CraneCost}) over the period. The demands over the time periods are given by \\\\param{Demands}, with a corresponding unloading capacity per period specified by \\\\param{UnloadCapacity}. The system starts with an initial inventory of containers given by \\\\param{InitContainer}, and the maximum container inventory is limited to \\\\param{MaxContainer}. The logistics also involve \\\\param{NumCranes} number of cranes with \\\\param{CraneCapacity} each to aid in the unloading process.\", \"parameters\": [{\"definition\": \"The number of time periods\", \"symbol\": \"T\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Demand at time t\", \"symbol\": \"Demands\", \"value\": \"\", \"shape\": [\"T\"]}, {\"definition\": \"Unloading cost at time t\", \"symbol\": \"UnloadCosts\", \"value\": \"\", \"shape\": [\"T\"]}, {\"definition\": \"Unloading capacity at time t\", \"symbol\": \"UnloadCapacity\", \"value\": \"\", \"shape\": [\"T\"]}, {\"definition\": \"Cost for holding containers\", \"symbol\": \"HoldingCost\", \"value\": 0, \"shape\": []}, {\"definition\": \"Maximum number of containers that can be held\", \"symbol\": \"MaxContainer\", \"value\": 0, \"shape\": []}, {\"definition\": \"Initial number of containers at the start\", \"symbol\": \"InitContainer\", \"value\": 0, \"shape\": []}, {\"definition\": \"Number of cranes available for unloading\", \"symbol\": \"NumCranes\", \"value\": 0, \"shape\": []}, {\"definition\": \"Capacity of each crane\", \"symbol\": \"CraneCapacity\", \"value\": 0, \"shape\": []}, {\"definition\": \"Cost for renting each crane\", \"symbol\": \"CraneCost\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A traveler based in \\var{start_city} needs to visit \\var{N} towns for business.\n- The distance \\var{distance_{i,j}} between city \\var{i} and \\var{j} is provided in miles and are symmetric, meaning the distance from city \\var{i} to city \\var{j} is the same as from city \\var{j} to city \\var{i}.\n- The traveler must return to \\var{start_city} after visiting all towns.\n\nINPUT FORMAT: \n\n{\n    \"distances\": {\n        city_i: {\n            city_j: distance_{i, j},\n            for j in 1, ..., N-1\n        },\n        for i in 1, ..., N\n    },\n    \"start_city\": start_city\n}\n\nOBJECTIVE: Determine the shortest route that the traveler can take to visit all \\var{N} towns and return to \\var{start_city}.\n\nOUTPUT INFO:\n\n- The sequence of cities visited after \\var{start_city} is \\var{visit_order}.\n- \\var{total_distance} traveled on this optimal journey.\n\nOUTPUT FORMAT:\n\n{\n    \"visit_order\": [city_n for n in 1, ..., N+1],\n    \"total_distance\": total_distance\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Identifying the shortest route for a traveler to visit a certain number of towns and return to the original starting town.\", \"constraints\": [\"The traveler must visit each town exactly once\", \"The traveler must return to StartCity after visiting all other towns\", \"The distance between any two towns is non-negative\"], \"objective\": \"Minimize the total travel distance for the route\", \"description\": \"Determine the shortest route that the traveler can take to visit all \\\\param{N} towns and return to \\\\param{StartCity}.\", \"parameters\": [{\"definition\": \"Number of towns to visit\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Index of the start city\", \"symbol\": \"StartCity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Distance from city i to city j\", \"symbol\": \"Distances\", \"value\": \"\", \"shape\": [\"N\", \"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP or MILP\n\nPROBLEM INFO:\n\n- The town has \\var{S} different shifts for the police officers during the day.\n- During each shift \\var{s}, the town requires \\var{officers_needed_{s}} police officers on duty.\n- Each police officer works for two consecutive shifts.\n- The cost for the town when starting a shift at \\var{s} is \\var{shift_cost_{s}}.\n\nINPUT FORMAT: \n\n{\n    \"officers_needed\": [officers_needed_{s} for s in 1, ..., S],\n    \"shift_costs\": [shift_cost_{s} for s in 1, ..., S]\n}\n\nOBJECTIVE: How many officers should the town assign to each shift in order to minimize the total cost?\n\nOUTPUT INFO:\n\n- The number of officers assigned to each shift \\var{officers_assigned_{s}}.\n- \\var{total_cost} indicates the total cost for the town.\n\nOUTPUT FORMAT:\n\n{\n    \"officers_assigned\": [officers_assigned_{s} for s in 1, ..., S],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The town needs to determine the number of officers to assign per shift to minimize the total cost of staffing.\", \"constraints\": [\"Number of officers assigned to each shift is non-negative\", \"Number of officers assigned meets the OfficersNeeded for each shift\"], \"objective\": \"Minimize the total cost of assigning officers to each of the S shifts\", \"description\": \"How many officers should the town assign to each shift in order to minimize the total cost, given that there are S shifts, defined by the number of officers needed for each shift \\\\param{OfficersNeeded}, and the respective costs of assigning an officer to each shift \\\\param{ShiftCosts}?\", \"parameters\": [{\"definition\": \"Number of shifts for which officers are needed\", \"symbol\": \"NumShifts\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of officers needed for shift s\", \"symbol\": \"OfficersNeeded\", \"value\": \"\", \"shape\": [\"NumShifts\"]}, {\"definition\": \"Cost of assigning an officer to shift s\", \"symbol\": \"ShiftCosts\", \"value\": \"\", \"shape\": [\"NumShifts\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Machine \\var{1} is being outsourced so that the manufacturer must pay for the labor.\n- The labor costs $\\var{standard_cost}/h up to \\var{overtime_hour} hours, after which it costs $\\var{overtime_cost}/h due to overtime.\n- Individual availability conditions for Machine \\var{1} can be disregarded.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"standard_cost\": standard_cost,\n    \"overtime_cost\": overtime_cost,\n    \"overtime_hour\": overtime_hour\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer needs to decide the optimum number of batches of parts to produce each month to maximize profit, taking into account various factors such as time requirement, costs, machine availability, pricing, minimum production batches, and overtime considerations.\", \"constraints\": [\"Each part p requires TimeRequired for p hours of machine time on machine m\", \"Machine m is available for Availability for m hours per month\", \"At least MinBatches for p batches of each part p must be produced\", \"Overtime operation is allowed for up to OvertimeHour hours\", \"The number of batches produced for any part must be non-negative\"], \"objective\": \"Maximize profit from producing and selling parts\", \"description\": \"PROBLEM TYPE\\nLP\\n\\nINPUT FORMAT \\n\\n{\\n    \\\"time_required\\\": [[TimeRequired for p in 1, ..., P] for m in 1, ..., M],\\n    \\\"machine_costs\\\": [MachineCosts for m in 1, ..., M],\\n    \\\"availability\\\": [Availability for m in 1, ..., M],\\n    \\\"prices\\\": [Prices for p in 1, ..., P],\\n    \\\"min_batches\\\": [MinBatches for p in 1, ..., P],\\n    \\\"standard_cost\\\": StandardCost,\\n    \\\"overtime_cost\\\": OvertimeCost,\\n    \\\"overtime_hour\\\": OvertimeHour\\n}\\n\\n\\nOBJECTIVE\\nHow many batches of each part should the manufacturer produce each month to maximize profit?\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"NumMachines\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of part types\", \"symbol\": \"NumParts\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time required to produce one batch of part p on machine m\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"NumMachines\", \"NumParts\"]}, {\"definition\": \"Cost of operating machine m for one month\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"NumMachines\"]}, {\"definition\": \"Number of hours machine m is available each month without overtime\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"NumMachines\"]}, {\"definition\": \"Price received for selling one batch of part p\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"NumParts\"]}, {\"definition\": \"Minimum number of batches of part p to be produced\", \"symbol\": \"MinBatches\", \"value\": \"\", \"shape\": [\"NumParts\"]}, {\"definition\": \"Standard cost for operating all machines during normal operating hours\", \"symbol\": \"StandardCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra cost for operating a machine in overtime per hour\", \"symbol\": \"OvertimeCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of overtime hours available for machine m\", \"symbol\": \"OvertimeHour\", \"value\": \"\", \"shape\": [\"NumMachines\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the ‘best’ straight line y = bx + a where the objective is to minimize the maximum deviation of all the observed values of y from the value predicted by the linear relationship.\n\nOUTPUT INFO:\n\n- \\var{intercept} represents the intercept of the fitted line\n- \\var{slope} represents the slope of the fitted line\n\nOUTPUT FORMAT:\n\n{\n    \"intercept\": intercept,\n    \"slope\": slope\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to identify the parameters of a linear model that fits the observed x and y data points in such a way that the maximum deviation of the observed y values from the predicted y values is minimized.\", \"constraints\": [\"The deviation is the absolute difference between predicted y values and observed y values\", \"Deviation should be minimized for all K observed values\"], \"objective\": \"Minimize the maximum deviation of all K observed values from the predicted y values\", \"description\": \"Fit the \\u2018best\\u2019 straight line y = bx + a where the objective is to minimize the maximum deviation of all the \\\\param{K} observed values of \\\\param{Y} from the value predicted by the linear relationship. The observed values of y are given by \\\\param{Y} and the observed values of x are given by \\\\param{X}.\", \"parameters\": [{\"definition\": \"Number of observed data points\", \"symbol\": \"NumObs\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Observed values of y\", \"symbol\": \"Y\", \"value\": \"\", \"shape\": [\"NumObs\"]}, {\"definition\": \"Observed values of x\", \"symbol\": \"X\", \"value\": \"\", \"shape\": [\"NumObs\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- We suppose that some products can be produced, each of them passing through several stages.\n- Necessary time to produce 1 unit of product \\var{k} is \\var{produce_time_{k, s}} hours for stage \\var{s}.\n- Availability in working hours is \\var{time_{s}} for stage \\var{s}. \n- The unitary profits for product \\var{k} is \\var{profit_{k}}.\n\nINPUT FORMAT:\n\n{\n\t\"produce_time\": [[produce_time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"available_time\": [time_{s} for s in 1,...,S],\n\t\"profit\": [profit_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Determine the quantities to be produced such that all the production constraints are satisfied and the profit is maximized.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the production quantity for each product\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The production involves multiple products and machines, with each product requiring specific production time on each machine and yielding a certain profit.\", \"constraints\": [\"Each product k must be produced in non-negative quantities\", \"For each machine m, the total production time for all products cannot exceed AvailableTime\"], \"objective\": \"Maximize the total profit from producing different products subject to production time constraints on each machine\", \"description\": \"Determine the quantities to be produced such that all the production constraints are satisfied and the profit is maximized. The parameters include the number of different products \\\\param{NumProducts} and the number of different machines \\\\param{NumMachines}. Each product k requires \\\\param{ProduceTime}_{k,m} to produce on machine m. Each machine m has a total available time of \\\\param{AvailableTime}_m. The profit from producing one unit of product k is \\\\param{Profit}_k.\", \"parameters\": [{\"definition\": \"Number of different products\", \"symbol\": \"NumProducts\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different machines\", \"symbol\": \"NumMachines\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time to produce one unit of product k on machine m\", \"symbol\": \"ProduceTime\", \"value\": \"\", \"shape\": [\"NumProducts\", \"NumMachines\"]}, {\"definition\": \"Total available time on machine m\", \"symbol\": \"AvailableTime\", \"value\": \"\", \"shape\": [\"NumMachines\"]}, {\"definition\": \"Profit from producing one unit of product k\", \"symbol\": \"Profit\", \"value\": \"\", \"shape\": [\"NumProducts\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- US soybean suppliers ship soybeans to different destinations using various routes.\n- Consider a transportation network consisting of \\var{n} cities.\n- Soybeans are sent from a terminal city \\var{k} to a port city \\var{p}.\n- Subsequently, Soybeans are transported from a port city \\var{p} to a destination city \\var{l}\n- Let \\var{A} be the set of all routes. \n- There is a positive transport cost \\var{C_{i,j}} per metric ton along that route.\n- Each source terminal \\var{k} has a soybean supply of \\var{supply_{k}}. \n- Each destination \\var{l} has a demand for soybeans of \\var{demand_{l}}.\n\nINPUT FORMAT: \n\n{\n    \"routes\": [\n       {\n        \"start\": i,\n        \"end\": j,\n        \"C\": C_{i,j},\n       }\n    ],\n    \"demand\": [\n        {\n            \"destination\": l,\n            \"D\": demand_{l}\n        }\n    ],\n    \"supply\": [\n        {\n            \"terminal\": k,\n            \"S\": supply_{k}\n        }\n    ]\n}\n\nOBJECTIVE: What quantity of soybeans should they from source to destination to minimize transportation costs?\n\nOUTPUT INFO:\n\n- the amount of soybeans shipped from \\var{i} to \\var{j} is \\var{amount_{i,j}}.\n- \\var{total_cost} represents the total transportation cost.\n\nOUTPUT FORMAT:\n\n{\n    \"distribution\": [\n        {\"from\": i,\n         \"to\": j,\n         \"amount\": amount_{i,j}\n        }\n        for id in 1, ..., m\n    ],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A logistics problem dealing with the transportation of soybeans from multiple supply terminals to various destinations, with routes connecting terminals and destinations. Each route has associated transportation costs and each destination has a specific demand to be met, while each terminal has a limited supply.\", \"constraints\": [\"Transported quantity from terminal to destination is non-negative\", \"Transported quantity from each terminal cannot exceed its supply\", \"Transported quantity to each destination must meet its demand\"], \"objective\": \"Minimize the total transportation costs of delivering soybeans from terminals to destinations\", \"description\": \"PROBLEM TYPE: LP\\n\\nINPUT FORMAT:\\n\\n{\\n    \\\"routes\\\": [\\n       {\\n        \\\"start\\\": i,\\n        \\\"end\\\": j,\\n        \\\"C\\\": \\\\param{Cost}_{i,j},\\n       }\\n    ],\\n    \\\"demand\\\": [\\n        {\\n            \\\"destination\\\": l,\\n            \\\"D\\\": \\\\param{Demand}_{l}\\n        }\\n    ],\\n    \\\"supply\\\": [\\n        {\\n            \\\"terminal\\\": k,\\n            \\\"S\\\": \\\\param{Supply}_{k}\\n        }\\n    ]\\n}\\n\\nOBJECTIVE: What quantity of soybeans should they transport from source to destination to minimize transportation costs?\", \"parameters\": [{\"definition\": \"Number of terminals\", \"symbol\": \"NumTerminals\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of destinations\", \"symbol\": \"NumDestinations\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of transportation for route from terminal i to destination j\", \"symbol\": \"Cost\", \"value\": \"\", \"shape\": [\"NumTerminals\", \"NumDestinations\"]}, {\"definition\": \"Demand at each destination\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"NumDestinations\"]}, {\"definition\": \"Supply at each terminal\", \"symbol\": \"Supply\", \"value\": \"\", \"shape\": [\"NumTerminals\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP or MILP\n\nPROBLEM INFO:\n\n- A fine foods company produces gift baskets for a season that lasts \\var{W} weeks.\n- The demand for week \\var{w} is \\var{demand_{w}} and the demand must be met.\n- Regular labor is available for \\var{regular_labor_{w}} hours per week and costs $\\var{regular_cost}/h.\n- Overtime labor is available for \\var{overtime_labor_{w}} hours per week and costs $\\var{overtime_cost}/h.\n- Each basket takes \\var{assembly_time} hours of labor to assemble.\n- The material cost for each basket is $\\var{material_cost} and it sells for $\\var{selling_price}.\n- Unsold baskets from a week incur a $\\var{holding_cost} holding cost. \n- No baskets are available at the start of week 1.\n- Unsold baskets at the end of week \\var{W} have a salvage value of $var{salvage_value} and do not incur a holding cost.\n\nINPUT FORMAT: \n\n{\n    \"regular_cost\": regular_cost,\n    \"overtime_cost\": overtime_cost,\n    \"assembly_time\": assembly_time,\n    \"material_cost\": material_cost,\n    \"selling_price\": selling_price,\n    \"holding_cost\": holding_cost,\n    \"salvage_value\": salvage_value,\n    \"demand\": [demand_{w} for w in 1, ..., W],\n    \"regular_labor\": [regular_labor_{w} for w in 1, ..., W],\n    \"overtime_labor\": [overtime_labor_{w} for w in 1, ..., W]\n}\n\nOBJECTIVE: How much regular and overtime labor should be utilized each week to assemble the baskets to maximize the profit over the season?\n\nOUTPUT INFO:\n\n- the hours of regular labor used each week \\var{regular_used_{w}}.\n- the hours of overtime labor used each week \\var{overtime_used_{w}}.\n- the number of baskets assembled with regular labor \\var{regular_basket_{w}}.\n- the number of baskets assembled with overtime labor \\var{overtime_basket_{w}}.\n- the number of baskets on hand at the end of week \\var{inventory_{w}}.\n- \\var{total_profit} shows the total profit of the company for the season.\n\nOUTPUT FORMAT:\n\n{\n    \"regular_used\": [regular_used_{w} for w in 1, ..., W],\n    \"overtime_used\": [overtime_used_{w} for w in 1, ..., W],\n    \"regular_baskets\": [regular_basket_{w} for w in 1, ..., W],\n    \"overtime_baskets\": [overtime_basket_{w} for w in 1, ..., W],\n    \"inventory\": [inventory_{w} for w in 1, ..., W],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Determine the amount of regular and overtime labor to be used weekly for assembling baskets to maximize seasonal profit, considering labor costs, assembly time, material costs, selling price, holding costs, and salvage value.\", \"constraints\": [\"Regular labor used in any week is at most RegularLabor\", \"Overtime labor used in any week is at most OvertimeLabor\", \"Total assembly time in a week is limited by the sum of regular and overtime labor available\", \"Total number of baskets assembled must match weekly demand\", \"Number of baskets assembled must be non-negative\", \"Regular labor used must be non-negative\", \"Overtime labor used must be non-negative\"], \"objective\": \"Maximize profit from assembly and sale of baskets over the season\", \"description\": \"How much regular and overtime labor should be utilized each week to assemble the baskets to maximize the profit over the season? The costs for regular and overtime labor are \\\\param{RegularCost} and \\\\param{OvertimeCost}, respectively. Each basket requires \\\\param{AssemblyTime} to assemble, and the material cost per basket is \\\\param{MaterialCost}. Baskets are sold at \\\\param{SellingPrice}, with a holding cost of \\\\param{HoldingCost} and a salvage value of \\\\param{SalvageValue} at the end of the season. For each week w, the demand for baskets is \\\\param{Demand}, with available regular and overtime labor given by \\\\param{RegularLabor} and \\\\param{OvertimeLabor} respectively.\", \"parameters\": [{\"definition\": \"Cost of regular labor per unit of time\", \"symbol\": \"RegularCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Cost of overtime labor per unit of time\", \"symbol\": \"OvertimeCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Time required to assemble a single basket\", \"symbol\": \"AssemblyTime\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Cost of materials per basket\", \"symbol\": \"MaterialCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Selling price per basket\", \"symbol\": \"SellingPrice\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Holding cost per basket per unit of time\", \"symbol\": \"HoldingCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Salvage value per unsold basket at the end of the season\", \"symbol\": \"SalvageValue\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Demand for baskets in week w\", \"symbol\": \"Demand\", \"value\": 0.0, \"shape\": [\"W\"]}, {\"definition\": \"Number of regular labor units available in week w\", \"symbol\": \"RegularLabor\", \"value\": 0.0, \"shape\": [\"W\"]}, {\"definition\": \"Number of overtime labor units available in week w\", \"symbol\": \"OvertimeLabor\", \"value\": 0.0, \"shape\": [\"W\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Machine \\var{1} is being outsourced so that the manufacturer must pay for the labor.\n- The labor costs $\\var{standard_cost}/h up to \\var{overtime_hour} hours, after which it costs $\\var{overtime_cost}/h due to overtime.\n- Individual availability conditions for Machine \\var{1} can be disregarded.\n- The desired profit should surpass \\var{min_profit}.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"standard_cost\": standard_cost,\n    \"overtime_cost\": overtime_cost,\n    \"overtime_hour\": overtime_hour,\n    \"min_profit\": min_profit\n}\n\nOBJECTIVE: Determine the quantity of batches for each part the manufacturer should produce every month, ensuring all constraints are met.\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer produces P different parts using M machines. Each machine has specific time requirements and costs associated with producing the parts, as well as defined availability, standard and overtime operational costs, and a limited number of overtime hours. The manufacturer seeks to determine the monthly production batches for each part to satisfy demand while aiming for a certain profit level.\", \"constraints\": [\"Each machine's use time per part must not exceed the machine's availability\", \"Each machine has a limited number of overtime hours that can be used\", \"There is a minimum number of batches to be produced for each part\", \"The total standard and overtime costs must enable achieving a minimum target profit\", \"All produced batches for each part must be non-negative\", \"The time used on each machine when producing parts must be non-negative\", \"Overtime used on each machine must be non-negative and cannot exceed the available overtime hours\"], \"objective\": \"Determine the optimal quantity of batches for each part to maximize the manufacturer's monthly profit, given machine availability and costs, while meeting the minimum batch requirements and not exceeding the overtime limits.\", \"description\": \"Determine the quantity of batches for each part the manufacturer should produce every month, ensuring all constraints are met, where the manufacturer has \\\\param{P} different parts, \\\\param{M} machines, \\\\param{TimeRequired} matrix indicating the time each machine takes to produce a part, \\\\param{MachineCosts} indicating the cost of each machine, \\\\param{Availability} of each machine, \\\\param{Prices} of each part, \\\\param{MinBatches} required for each part, a \\\\param{StandardCost} of running a machine per hour, an \\\\param{OvertimeCost} for running a machine beyond the standard hours, an \\\\param{OvertimeHour} available for overtime work for each machine, and a \\\\param{MinProfit} that the manufacturer aims to achieve.\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of parts to be produced\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time required to produce each part 'p' on machine 'm'\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"M\", \"P\"]}, {\"definition\": \"Cost associated with each machine 'm'\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Availability in hours of each machine 'm' per month\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Price obtained from selling each part 'p'\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Minimum number of batches of part 'p' that must be produced\", \"symbol\": \"MinBatches\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Standard cost for a machine to run for one hour\", \"symbol\": \"StandardCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Overtime cost for a machine to run for one hour beyond the standard availability\", \"symbol\": \"OvertimeCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Numbers of overtime hours available for a machine to run beyond standard availability\", \"symbol\": \"OvertimeHour\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The minimum profit the manufacturer wants to achieve\", \"symbol\": \"MinProfit\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A delivery person starts at the intersection of \\var{1}th Avenue and \\var{1}th Street and needs to reach the intersection of \\var{W}th Avenue and \\var{N}th Street.\n- The path between these two points forms a \\var{N-1} × \\var{W-1} grid.\n- Each block on the grid has a unique walking time due to varying pedestrian traffic during rush hour.\n- The delivery person can only walk north or west.\n- The journey can be broken down into \\var{m} stages, where at each stage the delivery person decides to walk either north or west.\n- When at the intersection of \\var{w}th Avenue and \\var{n}th Street, the time to move to the intersection of \\var{w+1}th Avenue and \\var{n}th Stree is \\var{west_time_{n,w}}.\n- When at the intersection of \\var{w}th Avenue and \\var{n}th Street, the time to move to the intersection of \\var{w}th Avenue and \\var{n+1}th Stree is \\var{north_time_{n,w}}.\n\nINPUT FORMAT:\n\n{\n    \"west_time\": [[west_{n,w} for w in 1, ..., W-1] for n in 1, ..., N],\n    \"north_time\": [[north_{n,w} for w in 1, ..., W] for n in 1, ..., N-1],\n}\n\nOBJECTIVE: Determine the optimal path the delivery person should take to ensure the package is delivered in the least amount of time.\n\nOUTPUT INFO:\n\n- \\var{total_time} represents total time taken to travel this path\n- \\var{paths} represents the flow going through the corresponding path\n\nOUTPUT FORMAT:\n\n{\n    \"paths\": [(street_{n}, avenue_{w}) for id in 1, ..., m]\n    \"total_time\": total_travel_time\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A delivery person is required to determine the most time-efficient route for delivering a package within a grid of east-west and north-south streets.\", \"constraints\": [\"The number of east-west street segments used cannot exceed N\", \"The number of north-south street segments used cannot exceed W\", \"East-west street segments are non-negative\", \"North-south street segments are non-negative\"], \"objective\": \"Minimize the total amount of time to deliver the package\", \"description\": \"Determine the optimal path the delivery person should take to ensure the package is delivered in the least amount of time. The path is constrained by the number of east-west streets, \\\\param{N}, and the number of north-south streets, \\\\param{W}. Each east-west street segment \\\\param{WestTime} and each north-south street segment \\\\param{NorthTime} takes a certain amount of time to cross.\", \"parameters\": [{\"definition\": \"Number of east-west streets\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of north-south streets\", \"symbol\": \"W\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time to cross street segment going west, for given street n and segment w\", \"symbol\": \"WestTime\", \"value\": \"\", \"shape\": [\"N\", \"W-1\"]}, {\"definition\": \"Time to cross street segment going north, for given street n and segment w\", \"symbol\": \"NorthTime\", \"value\": \"\", \"shape\": [\"N-1\", \"W\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- A number of power stations are committed to meeting the following electricity load demands over a day.\n- Period \\var{t} of a day has demand \\var{demand_{t}}.\n- There are several types of generating unit available: the number of \\var{k}-th type units is \\var{num_{k}}.\n- Type \\var{k} generator has to work between a minimum level \\var{minlevel_{k}} and a maximum level \\var{maxlevel_{k}}. \n- There is an hourly cost of running each type \\var{k} generator at minimum level \\var{runcost_{k}}. \n- In addition, there is an extra hourly cost \\var{extracost_{k}} for each megawatt at which a type \\var{k} unit is operated above the minimum level. \n- Starting up a type \\var{k} generator also involves a cost \\var{startcost_{k}}.\n\n\nINPUT FORMAT:\n\n{\n    \"demand\": [demand_{t} for t in 1,...,T],\n    \"num\": [num_{k} for in 1,...,K],\n    \"minlevel\": [minlevel_{k} for in 1,...,K],\n    \"maxlevel\": [minlevel_{k} for in 1,...,K],\n    \"runcost\": [runcost_{k} for in 1,...,K],\n    \"extracost\": [extracost_{k} for in 1,...,K],\n    \"startcost\": [startcost_{k} for in 1,...,K]\n}\n\n\nOBJECTIVE: Which generators should be working in which periods of the day to minimize total cost?\n\nOUTPUT INFO:\n\n- \\var{numon} represents the number of generators of each type that are on in each period\n\nOUTPUT FORMAT:\n\n{\n    \"numon\": [[numon_{k, t} for t in 1,...,T] for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves scheduling generators to operate during different periods of the day in order to meet a specified electricity demand at minimum cost. Each generator has its own operational constraints and costs associated with running, producing extra power, and starting up.\", \"constraints\": [\"Generator output must meet or exceed the demand for each period\", \"Each generator can operate only within its minimum and maximum levels\", \"The total number of generators used cannot exceed the available number of each generator\"], \"objective\": \"Minimize the total cost of running generators, which includes running costs, extra costs for exceeding certain thresholds, and start-up costs\", \"description\": \"Which generators should be working in which periods of the day to minimize the total cost given the demand (\\\\param{Demand}) for each period, the number of each generator (\\\\param{NumGenerator}), the minimum (\\\\param{MinLevel}) and maximum (\\\\param{MaxLevel}) levels of each generator, the running costs (\\\\param{RunCost}), the extra costs (\\\\param{ExtraCost}), and the start-up costs (\\\\param{StartCost}) for each generator?\", \"parameters\": [{\"definition\": \"Total number of periods\", \"symbol\": \"T\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total number of generators\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Demand during period t\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"T\"]}, {\"definition\": \"Number of generator k\", \"symbol\": \"NumGenerator\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Minimum level of generator k\", \"symbol\": \"MinLevel\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Maximum level of generator k\", \"symbol\": \"MaxLevel\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Running cost of generator k\", \"symbol\": \"RunCost\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Extra cost of generator k\", \"symbol\": \"ExtraCost\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Start-up cost of generator k\", \"symbol\": \"StartCost\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the ‘best’ quadratic curve y = c * x^2 + b * x + a to this set of data points. The objective is to minimize the sum of absolute deviations of each observed value of y from the value predicted by the quadratic relationship.\n\nOUTPUT INFO:\n\n- \\var{quadratic} represents the coefficient of quadratic term\n- \\var{linear} represents the coefficient of linear term\n- \\var{constant} represents the coefficient of constant\n\nOUTPUT FORMAT:\n\n{\n    \"quadratic\": quadratic,\n    \"linear\": linear,\n    \"constant\": constant\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is about curve fitting, specifically quadratic curve fitting, which involves finding a quadratic function that best fits a given set of data points in terms of minimizing the sum of absolute deviations between observed values and those predicted by the quadratic function.\", \"constraints\": [\"The curve is a quadratic function of the form y = c * x^2 + b * x + a\"], \"objective\": \"Minimize the sum of absolute deviations between the observed values (ObservedValues) and the values predicted by the quadratic function using the observed x-values (ObservedXValues)\", \"description\": \"Fit the \\u2018best\\u2019 quadratic curve y = c * x^2 + b * x + a to this set of data points. The objective is to minimize the sum of absolute deviations of each observed value of \\\\param{ObservedValues} from the value predicted by the quadratic relationship with \\\\param{ObservedXValues}.\", \"parameters\": [{\"definition\": \"Number of data points\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Observed y values at each data point k\", \"symbol\": \"ObservedValues\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Observed x values at each data point k\", \"symbol\": \"ObservedXValues\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP or MILP\nPROBLEM INFO:\n\n- A food is manufactured by refining raw oils and blending them together. \n- The raw oils are either vegetable oils or non-vegetable oils. \n- Each oil \\var{i} may be purchased in month \\var{m} for price \\var{price_{i,m}}.\n- The final product sells at \\var{sell_price} per ton.\n- Vegetable oils and non-vegetable oils require different production lines for refining. \n- In any month, it is not possible to refine more than \\var{max_vegetable_refining_per_month} tons of vegetable oils and more than \\var{max_non_vegetable_refining_per_month} tons of non-vegetable oils. \n- There is no loss of weight in the refining process, and the cost of refining may be ignored.\n- It is possible to store up to \\var{storage_size} tons of each raw oil for use later. \n- The cost of storage for both vegetable and non-vegetable oil is \\var{storage_cost} per ton per month.\n- The final product cannot be stored, nor can refined oils be stored.\n- There is a technological restriction of hardness on the final product. \n- In the units in which hardness is measured, this must lie between \\var{max_hardness} and \\var{min_hardness}.\n- The hardness product is computed by the weighted average of hardness of each oil.\n- The hardness of oil \\var{i} is \\var{hardness_{i}}.\n- At present, there are \\var{init_amount} tons of each type of raw oil in storage. \n- We can assume that there is a month \"0\" to model the inital amount.\n- It is required that at the end of the last month, we still have the same amout of storage as \\var{init_amount}.\n- This means directly adding the constraint that the storage in the last month must be equal to \\var{init_amount}.\n- The food may never be made up of more than three oils in any month.\n- If an oil is used in a month, at least \\var{min_usage} tons must be used.\n- There are dependencies in the oil usage and \\var{dependency_{i, j}} shows this relation\n- If \\var{dependency_{i, j}} is 1, then when oil \\var{i} is used, oil \\var{j} must also be used\n\n\nINPUT FORMAT:\n\n{\n    \"buy_price\":[[price_{i, m} for i in 1,...,I] for m in 1,...,M],\n    \"sell_price\": sell_price,\n    \"is_vegetable\": [is_vegetable_{i} for i in 1,...,I],\n    \"max_vegetable_refining_per_month\": max_veg,\n    \"max_non_vegetable_refining_per_month\": max_non_veg,\n    \"storage_size\": storage_size,\n    \"storage_cost\": storage_cost,\n    \"max_hardness\": max_hardness,\n    \"min_hardness\": min_hardness,\n    \"hardness\": [hardness_{i} for i in 1,...,I],\n    \"init_amount\": init_amount,\n    \"min_usage\": min_usage,\n    \"dependencies\": [dependency_{i} for i in 1,...,I]\n}\n\n\nOBJECTIVE: What buying, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO: \n\n- \\var{buyquantity} represents the amount of buying quantity of each oil in each month\n- \\var{refine} represents the amount of refined quantity of each oil in each month\n- \\var{storage} represents the storage of each oil in each month\n \nOUTPUT FORMAT: \n\n{\n    \"buy\": [[buyquantity_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"refine\": [[refine_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"storage\": [[storage_{i, m} for i in 1,...,I] for m in 1,...,M]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company is involved in the buying, storing, and manufacturing process where it deals with different types of items, which can either be vegetables or not. Each item has its own buying price and contributes differently to the manufacturing process concerning its hardness. There is also storage space which incurs a cost, and the company starts with an initial amount of items. The company wishes to maximize profit, considering the constraints related to the refining capacity for vegetable and non-vegetable items, storage size, cost, and item usage.\", \"constraints\": [\"Maximum amount of vegetables that can be refined per month is defined by MaxVegRefiningPerMonth\", \"Maximum amount of non-vegetables that can be refined per month is defined by MaxNonVegRefiningPerMonth\", \"The storage has a size limit defined by StorageSize\", \"The hardness of each item used in manufacturing must be within the range of MinHardness and MaxHardness\", \"There is a minimum usage constraint for items as given by MinUsage\", \"There are certain dependencies between the items as defined in Dependencies\"], \"objective\": \"Maximize the company's profit from its buying, storing, and manufacturing policy\", \"description\": \"LP or MILP\\n\\nWhat buying, storing and manufacturing policy should the company pursue in order to maximize profit?\\n\\n{\\n    \\\"buy_price\\\": [[\\\\param{BuyPrice} for i in 1,...,\\\\param{I}] for m in 1,...,\\\\param{M}],\\n    \\\"sell_price\\\": \\\\param{SellPrice},\\n    \\\"is_vegetable\\\": [\\\\param{IsVegetable} for i in 1,...,\\\\param{I}],\\n    \\\"max_vegetable_refining_per_month\\\": \\\\param{MaxVegRefiningPerMonth},\\n    \\\"max_non_vegetable_refining_per_month\\\": \\\\param{MaxNonVegRefiningPerMonth},\\n    \\\"storage_size\\\": \\\\param{StorageSize},\\n    \\\"storage_cost\\\": \\\\param{StorageCost},\\n    \\\"max_hardness\\\": \\\\param{MaxHardness},\\n    \\\"min_hardness\\\": \\\\param{MinHardness},\\n    \\\"hardness\\\": [\\\\param{Hardness} for i in 1,...,\\\\param{I}],\\n    \\\"init_amount\\\": \\\\param{InitialAmount},\\n    \\\"min_usage\\\": \\\\param{MinUsage},\\n    \\\"dependencies\\\": [\\\\param{Dependencies} for i in 1,...,\\\\param{I}]\\n}\", \"parameters\": [{\"definition\": \"Number of goods I\", \"symbol\": \"I\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of months M\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Buying price of good i in month m\", \"symbol\": \"BuyPrice\", \"value\": \"\", \"shape\": [\"I\", \"M\"]}, {\"definition\": \"Selling price\", \"symbol\": \"SellPrice\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Indicator whether good i is a vegetable or not\", \"symbol\": \"IsVegetable\", \"value\": \"\", \"shape\": [\"I\"]}, {\"definition\": \"Maximum refining capacity for vegetables per month\", \"symbol\": \"MaxVegRefiningPerMonth\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum refining capacity for non-vegetables per month\", \"symbol\": \"MaxNonVegRefiningPerMonth\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Storage capacity\", \"symbol\": \"StorageSize\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Storage cost per unit per month\", \"symbol\": \"StorageCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum hardness of goods that can be processed\", \"symbol\": \"MaxHardness\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Minimum hardness of goods that can be processed\", \"symbol\": \"MinHardness\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Hardness of good i\", \"symbol\": \"Hardness\", \"value\": \"\", \"shape\": [\"I\"]}, {\"definition\": \"Initial amount of goods available for processing\", \"symbol\": \"InitialAmount\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Minimum usage of goods\", \"symbol\": \"MinUsage\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Dependencies of goods i\", \"symbol\": \"Dependencies\", \"value\": \"\", \"shape\": [\"I\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- An investor has a portfolio of \\var{N} different stocks.\n- He has bought \\var{bought_i} shares of stock \\var{i} at price \\var{buyPrice_i}. \n- The current price of one share of stock \\var{i} is \\var{currentPrice_i}.\n- The investor expects that the price of one share of stock \\var{i} in one year will be \\var{futurePrice_i}.\n- If he sells shares, the investor pays transaction costs at the rate of \\var{transactionRate} % of the amount transacted.\n- In addition, the investor pays taxes at the rate of \\var{taxRate} % on capital gains (i.e., the difference between the amount received from selling shares and the amount paid to buy them).\n- Both transaction costs and taxes are numbers between 0 and 100.\n- The investor wants to raise an amount of money \\var{K} net of capital gains and transaction costs.\n- You can assume that the investor can sell floating point numbers of shares.\n\nINPUT FORMAT: \n\n{\n    \"bought\": [bought_i, for i in 1, ..., N],\n    \"buyPrice\": [buyPrice_i, for i in 1, ..., N],\n    \"currentPrice\": [currentPrice_i, for i in 1, ..., N],\n    \"futurePrice\": [futurePrice_i, for i in 1, ..., N],\n    \"transactionRate\": transactionRate,\n    \"taxRate\": taxRate,\n    \"K\": K\n}\n\nOBJECTIVE: We want to know how many shares the investor needs to sell in order to raise the needed money, net of capital gains and transaction costs, while maximizing the expected value of his portfolio next year.\n\nOUTPUT INFO:\n\n- \\var{sell_i} is the number of shares of stock \\var{i} that the investor should sell.\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [sell_i, for i in 1, ..., N],\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"An investor needs to sell shares of an asset they purchased in order to raise a certain amount of money, taking into account taxes and transaction costs. The aim is to maximize the expected value of the remaining portfolio for the next year.\", \"constraints\": [\"Number of shares sold is non-negative\", \"Number of shares sold is less than or equal to Bought\", \"Amount raised from selling shares after deducting taxes and transaction costs is at least K\", \"Capital gains tax is applied only on the profit per share (CurrentPrice - BuyPrice)\"], \"objective\": \"Maximize the expected value of the investor's portfolio next year\", \"description\": \"We want to know how many shares the investor needs to sell in order to raise the needed money, net of capital gains and transaction costs, \\\\param{K}, while maximizing the expected value of his portfolio next year. The investor initially bought \\\\param{Bought} shares at a purchase price of \\\\param{BuyPrice} per share. The current market price and expected future market price of the shares are \\\\param{CurrentPrice} and \\\\param{FuturePrice}, respectively. The transaction cost rate per share sold is \\\\param{TransactionRate}, and the capital gains tax rate is \\\\param{TaxRate}.\", \"parameters\": [{\"definition\": \"Number of different shares\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of each share initially bought\", \"symbol\": \"Bought\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Purchase price of each share\", \"symbol\": \"BuyPrice\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Current market price of each share\", \"symbol\": \"CurrentPrice\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Expected future market price of each share\", \"symbol\": \"FuturePrice\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Transaction cost rate per share sold\", \"symbol\": \"TransactionRate\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Capital gains tax rate on the profit from selling shares\", \"symbol\": \"TaxRate\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of money the investor needs to raise\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as £1’s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for £1’s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- There is a limited yearly manpower capacity of \\var{manpower_limit}.\n- An exogenous consumption requirement of \\var{demand_{k}} units from industry \\var{k} has to be satisfied in every year except year 0.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"manpower_limit\": manpower_limit,\n    \"demand\": [demand_{k} for k in 1,...,K]\n}\n\nOBJECTIVE: Maximize total productive capacity at the end of the five years.\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to maximize the total productive capacity considering multiple inputs and constraints over a five-year period.\", \"constraints\": [\"There is a company-wide manpower limit denoted by ManpowerLimit\", \"The production must meet certain demand levels specified by Demand\", \"Each input usage and productive capacity must be non-negative\"], \"objective\": \"Maximize total productive capacity at the end of the five years\", \"description\": \"Maximize total productive capacity at the end of the five years. The problem parameters are a matrix of coefficients \\\\param{InputOne}, a vector of manpower coefficients for input one \\\\param{ManpowerOne}, a matrix of coefficients \\\\param{InputTwo}, a vector of manpower coefficients for input two \\\\param{Manpowertwo}, initial stock levels \\\\param{Stock}, productive capacities \\\\param{Capacity}, a company-wide manpower limit \\\\param{ManpowerLimit}, and demand for each productive unit \\\\param{Demand}.\", \"parameters\": [{\"definition\": \"Total number of years in the planning horizon\", \"symbol\": \"K\", \"value\": 5, \"shape\": []}, {\"definition\": \"Input one coefficients matrix\", \"symbol\": \"InputOne\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}, {\"definition\": \"Manpower coefficients for input one\", \"symbol\": \"ManpowerOne\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Input two coefficients matrix\", \"symbol\": \"InputTwo\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}, {\"definition\": \"Manpower coefficients for input two\", \"symbol\": \"Manpowertwo\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Initial stock level for each of the productive units\", \"symbol\": \"Stock\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Productive capacity for each productive unit\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Company-wide manpower limit\", \"symbol\": \"ManpowerLimit\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Demand for each of the productive units at the end of the planning horizon\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Suppose that \\var{Z} is a random variable taking values 0, 1, ..., \\var{K}, with probabilities var{p_0}, \\var{p_1}, ..., \\var{p_K}, respectively.\n- We are given the values of the first two moments:\n\nE[\\var{Z}] = \\sum_{k=0}^{\\var{K}} k \\var{p_k} \nE[\\var{Z}^2] = \\sum_{k=0}^{\\var{K}} k^2 \\var{p_k} of \\var{Z} \n\n- We would like to obtain upper and lower bounds on the value of the fourth moment \n\nE[\\var{Z}_4] = \\sum_{k=0}^{K} k^4 \\var{p_k} of \\var{Z}\n\nShow how linear programming can be used to approach this problem. \t\t\t\t\n\nINPUT FORMAT: \n\n{\n    \"K\": K,\n    \"p\": [p_i for i in 0, ..., K]\n    \"E[Z]\": E[Z],\n    \"E[Z^2]\": E[Z^2],\n}\n\nOBJECTIVE: Use linear programming to find lower and upper bounds on E[Z^4].\n\nOUTPUT INFO:\n\n- The lower and upper bounds on E[Z^4] should be stored in the variables lower_bound and upper_bound, respectively.\n\nOUTPUT FORMAT:\n\n{\n    \"lower_bound\": lower_bound,\n    \"upper_bound\": upper_bound,\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A linear programming task aimed at finding bounds on the fourth moment of a random variable Z, given its first and second moments.\", \"constraints\": [\"Variable K is non-negative\", \"Array p[i] is non-negative for each i in 1 to K\", \"Lower and upper bounds for E[Z^4] should not be negative\"], \"objective\": \"Determine the lower and upper bounds on the expected value of Z raised to the fourth power\", \"description\": \"PROBLEM TYPE\\nLP\\n\\nINPUT FORMAT\\n\\n{\\n    \\\"K\\\": \\\\param{K},\\n    \\\"p\\\": [\\\\param{P[i]} for i in 0, ..., \\\\param{K}]\\n    \\\"E[Z]\\\": \\\\param{ExpectedZ},\\n    \\\"E[Z^2]\\\": \\\\param{ExpectedZSquared},\\n}\\n\\nOBJECTIVE\\nUse linear programming to find lower and upper bounds on \\\\param{E[Z^4]}.\", \"parameters\": [{\"definition\": \"Number of terms in the sequence\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Coefficients of the linear combination\", \"symbol\": \"P\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Expected value of Z\", \"symbol\": \"ExpectedZ\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Expected value of Z squared\", \"symbol\": \"ExpectedZSquared\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a school district with \\var{N} neighborhoods, \\var{S} schools, and \\var{G} grades at each school.\n- Each school \\var{s} has a capacity of \\var{capacity_{s,g}} for grade \\var{g}. \n- In each neighborhood \\var{n}, the student population of grade \\var{g} is \\var{population_{n,g}}. \n- Finally, the distance of school \\var{s} from neighborhood \\var{n} is \\var{d_{i,j}}.\n\nINPUT FORMAT: \n\n{\n    \"capacity\": [[capacity_{s,g} for g in 1, ..., G] for s in 1, ..., S],\n    \"population\": [[population_{n,g} for g in 1, ..., G] for n in 1, ..., N],\n    \"distance\": [[d_{n,s} for s in 1, ..., S] for n in 1, ..., N]\n}\n\nOBJECTIVE: We want to assign all students to schools, while minimizing the total distance traveled by all students. We may ignore the fact that numbers of students must be integers.\n\nOUTPUT INFO:\n- the output should show optimal \\var{x_{n,s,g}} for all \\var{n}, \\var{s}, \\var{g} (i.e., the number of students of grade \\var{g} in neighborhood \\var{n} assigned to school \\var{s}).\n- the output should also include \\var{total_distance}, the total distance traveled by all students.\n\nOUTPUT FORMAT:\n\n{\n    \"assignment\": [[[x_{n,s,g} for g in 1, ..., G] for s in 1, ..., S] for n in 1, ..., N],\n    \"total_distance\": total_distance\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves assigning student groups from various neighborhoods to different schools with the aim of minimizing the total distance traveled by all students, taking into consideration the capacity of the schools and distribution of student groups.\", \"constraints\": [\"Total number of students from each student group g assigned from neighborhood n to schools does not exceed the Population of group g in neighborhood n\", \"Total number of students from each student group g assigned to school s does not exceed the Capacity of school s for student group g\", \"Each student is assigned to exactly one school\", \"All populations, capacities, and distances are non-negative\"], \"objective\": \"Minimize the total distance traveled by all students in their assignments to schools\", \"description\": \"We want to assign all students to schools, while minimizing the total distance traveled by all students. We have a total number of \\\\param{S} schools, \\\\param{G} student groups, and \\\\param{N} neighborhoods. Each school s has a capacity for student group g represented by \\\\param{Capacity}. The population of student group g in neighborhood n is given by \\\\param{Population}. The distance between neighborhood n and school s is denoted as \\\\param{Distance}. We may ignore the fact that numbers of students must be integers.\", \"parameters\": [{\"definition\": \"Total number of schools\", \"symbol\": \"S\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total number of student groups\", \"symbol\": \"G\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total number of neighborhoods\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Capacity of school s for student group g\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"S\", \"G\"]}, {\"definition\": \"Population of student group g in neighborhood n\", \"symbol\": \"Population\", \"value\": \"\", \"shape\": [\"N\", \"G\"]}, {\"definition\": \"Distance between neighborhood n and school s\", \"symbol\": \"Distance\", \"value\": \"\", \"shape\": [\"N\", \"S\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a rocket that travels along a straight path. \n- Let \\var{x_t}, \\var{v_t}, and \\var{a_t} be the position, velocity, and acceleration, respectively, of the rocket at time \\var{t}.\n- By discretizing time and by taking the time increment to be unity, we obtain an approximate discrete-time model of the form \n    \n    \\var{x_{t+1}} = \\var{x_t} + \\var{v_t}\n    \\var{v_{t+1}} = \\var{v_t} + \\var{a_t}\n\n- We assume that the acceleration \\var{a_t} is under our control, as it is determined by the rocket thrust.\n- In a rough model, the magnitude |\\var{a_t}| of the accelera­tion can be assumed to be proportional to the rate of fuel consumption at time \\var{t}.\n- Suppose that we have \\var{x_0} and \\var{v_0} as the initial position and velocity, respectively, of the rocket.\n- We wish the rocket to take off and reach a target position \\var{x_T} with speed \\var{v_T} at time \\var{T}.\n- Furthermore, we wish to accomplish this in an economical fashion, that is, by using as little fuel as possible.\n\n\nINPUT FORMAT: \n\n{\n    \"x_0\": x_0,\n    \"v_0\": v_0,\n    \"x_T\": x_T,\n    \"v_T\": v_T,\n    \"T\": T\n}\n\nOBJECTIVE: The objective is to minimize the maximum thrust required, which is max_t |a_t|. \n\nOUTPUT INFO:\n\n- key \"x\" contains a list of the positions of the rocket at each time step from 0 to \\var{T}\n- key \"v\" contains a list of the velocities of the rocket at each time step from 0 to \\var{T}\n- key \"a\" contains a list of the accelerations of the rocket at each time step from 0 to \\var{T}\n- key \"fuel_spend\" contains the total fuel spent by the rocket\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"v\": [v_i for i in 1, ..., T],\n    \"a\": [a_i for i in 1, ..., T],\n    \"fuel_spend\": fuel_spent,\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to find the optimal control profile that minimizes the maximum thrust required over a certain duration, considering initial and final conditions for position and velocity.\", \"constraints\": [\"Thrust limits are determined by minimizing the maximum absolute value of acceleration over time T\"], \"objective\": \"Minimize the maximum thrust required across the given duration T\", \"description\": \"The objective is to minimize the maximum thrust required, which is max_t |a_t| over the duration T, with initial conditions set by X0, V0, and final conditions set by XT and VT.\", \"parameters\": [{\"definition\": \"Initial position of the object\", \"symbol\": \"X0\", \"value\": 0, \"shape\": []}, {\"definition\": \"Initial velocity of the object\", \"symbol\": \"V0\", \"value\": 0, \"shape\": []}, {\"definition\": \"Final position of the object\", \"symbol\": \"XT\", \"value\": 0, \"shape\": []}, {\"definition\": \"Final velocity of the object\", \"symbol\": \"VT\", \"value\": 0, \"shape\": []}, {\"definition\": \"Time duration for the journey\", \"symbol\": \"T\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as £1’s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for £1’s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- An exogenous consumption requirement of \\var{demand_{k}} units from industry \\var{k} has to be satisfied in every year except year 0.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"demand\": [demand_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Maximize the total manpower requirement over five years\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to optimize total manpower requirement over a period of five years considering the manpower needed for two different operations (one and two) for producing various products every year. Stock levels, production capacities, demands, and input coefficients between products are also considered.\", \"constraints\": [], \"objective\": \"Maximize the total manpower requirement over five years\", \"description\": \"Maximize the total manpower requirement over five years. The manpower requirements for operations one in year k is \\\\param{ManpowerOne}, and for operations two is \\\\param{ManpowerTwo}. The stock level of product k at the beginning of the year is \\\\param{Stock}, the production capacity for product k for the year is \\\\param{Capacity}, and the demand for product k for the year is \\\\param{Demand}. The input one coefficient for product k with respect to product j is \\\\param{InputOne}, and the input two coefficient for product k with respect to product j is \\\\param{InputTwo}.\", \"parameters\": [{\"definition\": \"The number of years over which the total manpower requirement is maximized\", \"symbol\": \"K\", \"value\": 5, \"shape\": []}, {\"definition\": \"Manpower requirements for operations one in year k\", \"symbol\": \"ManpowerOne\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Manpower requirements for operations two in year k\", \"symbol\": \"ManpowerTwo\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Stock level of product k at the beginning of the year\", \"symbol\": \"Stock\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Production capacity for product k for the year\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Demand for product k for the year\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Input one coefficient for product k with respect to product j\", \"symbol\": \"InputOne\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}, {\"definition\": \"Input two coefficient for product k with respect to product j\", \"symbol\": \"InputTwo\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO: \n- A company produces \\var{N} kinds of products. \n- A product of the \\var{i}-th type requires \\var{assemblyHour_i} hours of assembly labor, \\var{testingHour_i} hours of testing, and \\var{materialCost_i} worth of raw materials (in $).\n- Given the current personnel of the company, there can be at most \\var{maxAssembly} hours of assembly labor and \\var{maxTesting} hours of testing, each day.\n- Product of the \\var{i}-th type has a price of \\var{price_i} dollars.\n- The company can schedule up tp \\var{maxOvertimeAssembly} hours of overtime assembly labor can be sched­uled, at a cost of \\var{overtimeAssemblyCost} per hour.\n- Suppose that the raw material supplier provides a \\var{materialDiscount}% discount if the daily bill is above \\var{discountThreshold} dollars (\\var{materialDiscount} is a number between 0 and 100).\n\nINPUT FORMAT: \n\n{\n    \"assemblyHour\": [assemblyHour_i for i in 1, ..., N]\n    \"testingHour\": [testingHour_i for i in 1, ..., N],\n    \"materialCost\": [materialCost_i for i in 1, ..., N],\n    \"maxAssembly\": maxAssembly\n    \"maxTesting\": maxTesting,\n    \"price\": [price_i for i in 1, ..., N],\n    \"maxOvertimeAssembly\": maxOvertimeAssembly,\n    \"overtimeAssemblyCost\": overtimeAssemblyCost,\n    \"materialDiscount\": materialDiscount,\n    \"discountThreshold\": discountThreshold\n}\n\nOBJECTIVE: We want to maximize the daily profit of the company, which is the total revenue minus the total cost.\n\nOUTPUT INFO: \n\n- \\var{dailyProfit} shows the daily profit of the company \n- \\var{unitsProduced_i} shows the number of units of the \\var{i}-th product produced\n- \\var{overtimeAssembly} shows the number of hours of overtime assembly labor scheduled\n- \\var{materialBought} shows the amount of raw materials bought\n\nOUTPUT FORMAT:\n\n{\n    \"dailyProfit\": dailyProfit,\n    \"unitsProduced\": [unitsProduced_i for i in 1, ..., N],\n    \"overtimeAssembly\": overtimeAssembly,\n    \"materialBought\": materialBought\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company seeks to maximize daily profit by determining an optimal production mix for N different products, considering assembly and testing time constraints, material costs, and the potential for overtime and discounts.\", \"constraints\": [\"Total assembly hours must not exceed MaxAssembly hours\", \"Total testing hours must not exceed MaxTesting hours\", \"The number of products produced is non-negative\", \"The number of overtime assembly hours used is at most MaxOvertimeAssembly\"], \"objective\": \"Maximize the total daily profit, which is the total revenue minus the total cost including overtime costs, regular material costs, and considering material discounts\", \"description\": \"We want to maximize the daily profit of the company, which is the total revenue minus the total cost. The company has \\\\param{N} different products, each requiring \\\\param{AssemblyHour} hours for assembly, \\\\param{TestingHour} hours for testing, and with a material cost of \\\\param{MaterialCost}. The company cannot exceed \\\\param{MaxAssembly} hours for assembly and \\\\param{MaxTesting} hours for testing. Each product can be sold at \\\\param{Price}, but there is an opportunity to work \\\\param{MaxOvertimeAssembly} overtime hours for assembly at a cost of \\\\param{OvertimeAssemblyCost} per hour. Additionally, a material discount of \\\\param{MaterialDiscount} is offered when a purchase reaches the \\\\param{DiscountThreshold}.\", \"parameters\": [{\"definition\": \"Number of different products\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Hours required to assemble product i\", \"symbol\": \"AssemblyHour\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Hours required to test product i\", \"symbol\": \"TestingHour\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Material cost for product i\", \"symbol\": \"MaterialCost\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Maximum total hours available for assembly\", \"symbol\": \"MaxAssembly\", \"value\": 0, \"shape\": []}, {\"definition\": \"Maximum total hours available for testing\", \"symbol\": \"MaxTesting\", \"value\": 0, \"shape\": []}, {\"definition\": \"Selling price for product i\", \"symbol\": \"Price\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Maximum overtime hours available for assembly\", \"symbol\": \"MaxOvertimeAssembly\", \"value\": 0, \"shape\": []}, {\"definition\": \"Overtime cost for assembly per hour\", \"symbol\": \"OvertimeAssemblyCost\", \"value\": 0, \"shape\": []}, {\"definition\": \"Discount on material cost when a certain threshold is reached\", \"symbol\": \"MaterialDiscount\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Threshold for the quantity to reach to obtain the material discount\", \"symbol\": \"DiscountThreshold\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP or MILP\nPROBLEM INFO:\n\n- To operate a cafeteria, the manager must ensure on-call duty based on the statistics on the required staff. \n- In the future days, the number of desired employees on day \\var{n} is denoted with \\var{num_{n}}.\n- Each employee works \\var{n_working_days} days in a row and then has \\var{n_resting_days} days off.\n\nINPUT FORMAT:\n\n{\n\t\"num\": [num_{n} for n in 1,...,N],\n\t\"n_working_days\": n_working_days,\n\t\"n_resting_days\": n_resting_days\n}\n\n\nOBJECTIVE: Calculate the minimum number of employees to hire\n\nOUTPUT INFO:\n\n- \\var{total_number} represents the total number of employees to employ\n- \\var{is_work} represents whether employee is working a rest on each day. Its length is determined by \\var{total_number}\n\nOUTPUT FORMAT:\n\n{\n\t\"total_number\": total_number,\n\t\"is_work\": [[is_work_{n, i} for n in 1,...,N] for i in 1,...,total_number]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to find the minimum number of employees needed to meet a certain coverage requirement where employees work for a set number of consecutive days followed by a mandatory rest period.\", \"constraints\": [\"Each employee works for WorkingDays consecutive days\", \"Each employee must have at least RestingDays consecutive days of rest\", \"Number of employees is a non-negative integer\"], \"objective\": \"Minimize the number of employees to hire to meet the coverage requirements\", \"description\": \"Calculate the minimum number of employees to hire such that the requirements for coverage (as described by \\\\param{Num}) can be met with each employee working for \\\\param{WorkingDays} consecutive days followed by at least \\\\param{RestingDays} consecutive resting days.\", \"parameters\": [{\"definition\": \"The number of users on the nth day\", \"symbol\": \"Num\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Number of consecutive working days before a resting period\", \"symbol\": \"WorkingDays\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of consecutive resting days\", \"symbol\": \"RestingDays\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An Italian transport company must send empty containers from its depots to ports. \n- The number of containers available in the depot \\var{i} is denoted with \\var{numdepot_i}. \n- Container requirement in port \\var{j} is \\var{numport_{j}}. \n- Transport of containers is by barges. \n- Each barge can only contain two containers and the cost of transport (per barge) is proportional to the distance traveled (price is \\var{price} Euros/km).\n- The distances between depot \\var{i} and port \\var{j} is \\var{distance_{i, j}}.\n\nINPUT FORMAT:\n\n{\n\t\"numdepot\": [numdepot_{i} for i in 1,...,I],\n\t\"numport\": [numport_{j} for j in 1,...,J],\n\t\"price\": price,\n\t\"distance\": [[distance_{i, j} for i in 1,...I] for j in 1,...,J]\n}\n\n\nOBJECTIVE: Minimize the total transportation cost.\n\nOUTPUT INFO:\n\n\\var{number} represents the number of containers sent from each depot to port\n\nOUTPUT FORMAT:\n\n{\n\t\"number\": [[number_{i, j} for i in 1,...,I] for j in 1,...,J]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A company is looking to minimize the total transportation cost of transporting goods from its depots to ports.\", \"constraints\": [\"The number of depots I is non-negative\", \"The number of ports J is non-negative\", \"Cost per unit distance Price is non-negative\", \"Distance between each depot i and port j is non-negative\"], \"objective\": \"Minimize the total transportation cost from depots to ports\", \"description\": \"Minimize the total transportation cost. This cost is calculated based on the number of depots \\\\param{I}, the number of ports \\\\param{J}, the cost \\\\param{Price} per unit distance for transporting goods, and the distance \\\\param{Distance} between depot i and port j.\", \"parameters\": [{\"definition\": \"Number of depots\", \"symbol\": \"I\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of ports\", \"symbol\": \"J\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost per unit distance for transporting goods\", \"symbol\": \"Price\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Distance between depot i and port j\", \"symbol\": \"Distance\", \"value\": \"\", \"shape\": [\"I\", \"J\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a rocket that travels along a straight path. \n- Let \\var{x_t}, \\var{v_t}, and \\var{a_t} be the position, velocity, and acceleration, respectively, of the rocket at time \\var{t}.\n- By discretizing time and by taking the time increment to be unity, we obtain an approximate discrete-time model of the form \n    \n    \\var{x_{t+1}} = \\var{x_t} + \\var{v_t}\n    \\var{v_{t+1}} = \\var{v_t} + \\var{a_t}\n\n- We assume that the acceleration \\var{a_t} is under our control, as it is determined by the rocket thrust.\n- In a rough model, the magnitude |\\var{a_t}| of the accelera­tion can be assumed to be proportional to the rate of fuel consumption at time \\var{t}.\n- Suppose that we have \\var{x_0} and \\var{v_0} as the initial position and velocity, respectively, of the rocket.\n- We wish the rocket to take off and reach a target position \\var{x_T} with speed \\var{v_T} at time \\var{T}.\n- Furthermore, we wish to accomplish this in an economical fashion, that is, by using as little fuel as possible.\n\n\nINPUT FORMAT: \n\n{\n    \"x_0\": x_0,\n    \"v_0\": v_0,\n    \"x_T\": x_T,\n    \"v_T\": v_T,\n    \"T\": T\n}\n\nOBJECTIVE: The objective is to minimize the total fuel \\sum_{t=0}^{\\var{T}-1} |\\var{a_t}| spent subject to the preceding constraints.\n\nOUTPUT INFO:\n\n- key \"x\" contains a list of the positions of the rocket at each time step from 0 to \\var{T}\n- key \"v\" contains a list of the velocities of the rocket at each time step from 0 to \\var{T}\n- key \"a\" contains a list of the accelerations of the rocket at each time step from 0 to \\var{T}\n- key \"fuel_spend\" contains the total fuel spent by the rocket\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"v\": [v_i for i in 1, ..., T],\n    \"a\": [a_i for i in 1, ..., T],\n    \"fuel_spend\": fuel_spent,\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves minimizing the total fuel, represented by the sum of absolute accelerations over time, for an object with given initial and final positions and velocities over a specified total time period.\", \"constraints\": [], \"objective\": \"Minimize the total fuel, which is the sum of absolute values of acceleration over time\", \"description\": \"The objective is to minimize the total fuel \\\\sum_{t=0}^{\\\\param{TotalTime}-1} |\\\\param{a_t}| spent subject to the initial position \\\\param{InitialPosition}, initial velocity \\\\param{InitialVelocity}, final position \\\\param{FinalPosition}, final velocity \\\\param{FinalVelocity}, and total time \\\\param{TotalTime}.\", \"parameters\": [{\"definition\": \"Initial position of the object\", \"symbol\": \"InitialPosition\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Initial velocity of the object\", \"symbol\": \"InitialVelocity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Final position of the object\", \"symbol\": \"FinalPosition\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Final velocity of the object\", \"symbol\": \"FinalVelocity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total time over which the object is moving\", \"symbol\": \"TotalTime\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An economy consists of several industries. \n- Each unit produced by one of the industries (a unit will be taken as £1’s worth of value of production) requires inputs from possibly its own industry as well as other industries. \n- Industry \\var{k} requires \\var{inputone_{k, j}} input from industy \\var{j}.\n- Industry \\var{k} requires \\var{manpowerone_{k}} units of manpower.\n- There is a time lag in the economy so that the output in year t + 1 requires an input in year t.\n- Output from an industry may also be used to build productive capacity for itself or other industries in future years.\n- To give unit increases (capacity for £1’s worth of extra production) in productive capacity of industry \\var{k}, \\var{j} units of industry \\var{inputtwo_{k, j}} and \\var{manpowertwo{k}} units of manpower are needed.\n- Input from an industry in year t results in a (permanent) increase in productive capacity in year t + 2.\n- Stocks of goods may be held from year to year. \n- At present (year 0), the stocks of industry \\var{k} is \\var{stock_{k}}, and the capacity of industry \\var{k} is \\var{capacity_{k}}.\n- There is a limited yearly manpower capacity of \\var{manpower_limit}.\n\n\nINPUT FORMAT:\n\n{\n    \"inputone\": [[inputone_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowerone\": [manpowerone_{k} for k in 1,...,K],\n    \"inputtwo\": [[inputtwo_{k, j} for j in 1,...,K] for k in 1,...,K],\n    \"manpowertwo\": [manpowertwo_{k} for k in 1,...,K],\n    \"stock\": [stock_{k} for k in 1,...,K],\n    \"capacity\": [capacity_{k} for k in 1,...,K],\n    \"manpower_limit\": manpower_limit,\n}\n\n\nOBJECTIVE: Maximize total production in the last two years.\n\nOUTPUT INFO:\n\n- \\var{produce} represents the amount of units produced by each industry in each year\n- \\var{buildcapa} represents the amount of units used to build productive capacity for each industry in each year\n- \\var{stockhold} represents the amount of stock of each industry held in each year\n\nOUTPUT FORMAT:\n\n{\n    \"produce\": [[produce_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"buildcapa\": [[buildcapa_{k, t} for t in 1,...,T] for k in 1,...,K],\n    \"stockhold\": [[stock_{k, t} for t in 1,...,T] for for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The objective is to maximize the total production in the last two years, taking into consideration the constraints of two different types of resources, manpower allocation, stock levels, capacities, and a limit on the total manpower available.\", \"constraints\": [\"The consumption of InputOne per year is non-negative and within its availability\", \"The consumption of InputTwo per year is non-negative and within its availability\", \"Manpower allocation for ManpowerOne is non-negative and within its limit\", \"Manpower allocation for ManpowerTwo is non-negative and within its limit\", \"Stock levels must be maintained as per Stock non-negativity and limits\", \"Production capacities must be respected according to Capacity\", \"The total manpower used must not exceed the upper limit, ManpowerLimit\", \"All variables of production, resources, and manpower must be non-negative\"], \"objective\": \"Maximize total production in the last two years\", \"description\": \"Maximize total production in the last two years using the given constraints on production inputs from two resource types (\\\\param{InputOne} and \\\\param{InputTwo}), manpower allocations (\\\\param{ManpowerOne} and \\\\param{ManpowerTwo}), stock levels (\\\\param{Stock}), capacities (\\\\param{Capacity}), and the upper limit of manpower (\\\\param{ManpowerLimit}).\", \"parameters\": [{\"definition\": \"The production inputs from resource type one to product k in year j\", \"symbol\": \"InputOne\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}, {\"definition\": \"The manpower allocated to resource type one for product k\", \"symbol\": \"ManpowerOne\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"The production inputs from resource type two to product k in year j\", \"symbol\": \"InputTwo\", \"value\": \"\", \"shape\": [\"K\", \"K\"]}, {\"definition\": \"The manpower allocated to resource type two for product k\", \"symbol\": \"ManpowerTwo\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Stock levels of product k at the start of the planning horizon\", \"symbol\": \"Stock\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Production capacity for product k\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"The upper limit of manpower\", \"symbol\": \"ManpowerLimit\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- A manager of an oil refinery has \\var{allocated_i} million barrels of crude oil type \\var{i} allocated for production during the coming month. \n- These resources can be used to make \\var{P} different products. product \\var{p} sells for $ \\var{price_p} per barrel.\n- There are \\var{L} production processes. Process \\var{l} uses \\var{input_l_i} barrels of each crude \\var{i}, and produces \\var{output_l_p} barrels of each product \\var{p}. \n- Process \\var{l} has a cost of \\var{cost_l} per barrel of product produced.\n- All \\var{input_l_i} quantities and \\var{output_l_p} quanitites are in barrels. \n- There are no separate cost items for the cost of the crudes, as they have already been allocated.\n\nINPUT FORMAT: \n\n{\n    \"allocated\": [allocated_i for i in 1, ..., O],\n    \"price\": [price_p for p in 1, ..., P],\n    \"input\": [[input_l_i for i in 1, ..., O] for l in 1, ..., L],\n    \"output\": [[output_l_p for p in 1, ..., P] for l in 1, ..., L],\n    \"cost\": [cost_l for l in 1, ..., L]\n}\n\nOBJECTIVE: We want to know how many times should we execute each process to maximize the revenue for the next month (you can assume that the number of times that each process is executed is a floating point number)\n\nOUTPUT INFO:\n\n- \\var{revenue} is the total revenue for the month.\n- \\var{execute_l} is the number of times that process \\var{l} should be executed.\n\nOUTPUT FORMAT:\n\n{\n    \"revenue\": revenue,\n    \"execute\": [execute_l for l in 1, ..., L]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The goal is to determine the optimal execution frequency of each process to maximize the revenue for the coming month, involving various processes, options, and price points, each with associated resources, prices, inputs, outputs, and costs.\", \"constraints\": [\"Each process execution number is non-negative\", \"Total resource allocation for all processes does not exceed Allocated resources\", \"Inputs required for executing processes for all options do not exceed available Input for each option\", \"Outputs produced from executing processes for all price points do not exceed the demand represented by Output at each price point\"], \"objective\": \"Maximize the total revenue, which is calculated based on the Price at each price point, the number of times each process is executed, and the Cost for each process\", \"description\": \"We want to know how many times should we execute each process to maximize the revenue for the next month (you can assume that the number of times that each process is executed is a floating point number). The problem involves \\\\param{O} options, \\\\param{P} price points, and \\\\param{L} processes with \\\\param{Allocated} resources, \\\\param{Price} at each price point, \\\\param{Input} required for each option in each process, \\\\param{Output} produced for each price point in each process, and \\\\param{Cost} for each process.\", \"parameters\": [{\"definition\": \"Number of options\", \"symbol\": \"O\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of price points\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of processes\", \"symbol\": \"L\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Allocated resources for each option\", \"symbol\": \"Allocated\", \"value\": \"\", \"shape\": [\"O\"]}, {\"definition\": \"Price at each price point\", \"symbol\": \"Price\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Input resources required for each option in each process\", \"symbol\": \"Input\", \"value\": \"\", \"shape\": [\"L\", \"O\"]}, {\"definition\": \"Output produced for each price point in each process\", \"symbol\": \"Output\", \"value\": \"\", \"shape\": [\"L\", \"P\"]}, {\"definition\": \"Cost for each process\", \"symbol\": \"Cost\", \"value\": \"\", \"shape\": [\"L\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A firm produces \\var{M} different goods using \\var{N} different raw materials.\n- The firm has \\var{available_{i}} of raw material \\var{i} available.\n- Good \\var{j} requires \\var{req_{i,j}} units of material \\var{i} per unit produced.\n- Good \\var{j} results in a revenue of \\var{price_j} per unit produced.\n\n\nINPUT FORMAT: \n\n{\n    \"available\": [available_{i} for i in 1, ..., N]\n    \"requirements\": [[req_{i,j} for i in 1, ..., N] for j in 1, ..., M],\n    \"prices\": [price_{j} for j in 1, ..., M]\n}\n\nOBJECTIVE: How much of each good should the firm produce in order to maximize its total revenue?\n\nOUTPUT INFO:\n\n- the amount of each good produced \\var{amount_{j}}.\n\nOUTPUT FORMAT:\n\n{\n    \"amount\": [amount_{j} for j in 1, ..., M]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A firm produces multiple goods using different raw materials. Each good requires certain amounts of the raw materials and generates specific revenue.\", \"constraints\": [\"All goods quantities are non-negative\", \"The quantity of raw material i used cannot exceed Available amount\"], \"objective\": \"Maximize the firm's total revenue from goods production\", \"description\": \"A firm produces \\\\param{M} different goods using \\\\param{N} different raw materials. The firm has \\\\param{Available} amount of raw material i available. Good j requires \\\\param{Requirements} units of material i per unit produced. Good j results in a revenue of \\\\param{Prices} per unit produced. How much of each good should the firm produce in order to maximize its total revenue?\", \"parameters\": [{\"definition\": \"Number of different goods produced by the firm\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different raw materials used by the firm\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Available amount of each raw material\", \"symbol\": \"Available\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Requirement of material j for producing one unit of good i\", \"symbol\": \"Requirements\", \"value\": \"\", \"shape\": [\"M\", \"N\"]}, {\"definition\": \"Revenue earned from selling one unit of good j\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Consider a road divided into \\var{N} segments that is illuminated by \\var{M} lamps.\n- Let \\var{power_j} be the power of the \\var{j}-th lamp. The illumination \\var{ill_i} of the \\var{i}-th segment is assumed to be \\sum_{j=1}^{\\var{M}} \\var{coeff_{i,j}} \\var{power_j}, where \\var{coeff_{i,j}} are known coefficients.\n- Let \\var{desired_i} be the desired illumination of road \\var{i}. \n- We are interested in choosing the lamp powers \\var{power_j} so that the illuminations {ill_i} are close to the desired illuminations {desired_i}. \n\nINPUT FORMAT: \n\n{\n    \"coeff\": [[coeff_{i,j} for j in 1, ..., M] for i in 1, ..., N],\n    \"desired\": [desired_i for i in 1, ..., N]\n}\n\nOBJECTIVE: Find the lamp powers \\var{power_j} that minimize the absolute error between the illuminations {ill_i} and the desired illuminations {desired_i}.\n\nOUTPUT INFO:\n\n- \\var{power_j} is the optimal power of the \\var{j}-th lamp.\n- \\var{error} is the absolute error between the illuminations {ill_i} and the desired illuminations {desired_i}.\n\nOUTPUT FORMAT:\n\n{\n    \"power\": [power_j for j in 1, ..., M]\n    \"error\": error\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem focuses on finding the optimal powers for a set of lamps such that the illumination provided by the lamps has the minimum absolute error compared to the desired illumination levels. The relationship between lamp powers and their resulting illumination at various points is quantified by given coefficients.\", \"constraints\": [\"Lamp powers are non-negative\"], \"objective\": \"Minimize the absolute error between the actual illumination levels and the desired illumination levels\", \"description\": \"Find the lamp powers \\\\param{power_j} that minimize the absolute error between the illuminations \\\\param{ill_i} and the desired illuminations \\\\param{DesiredIlluminations}. The relationship between the lamp powers and the illuminations is given by coefficients \\\\param{Coefficients}.\", \"parameters\": [{\"definition\": \"Number of different illuminations\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of lamp powers\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Coefficients relating lamp powers to illumination\", \"symbol\": \"Coefficients\", \"value\": \"\", \"shape\": [\"N\", \"M\"]}, {\"definition\": \"Desired level of illuminations\", \"symbol\": \"DesiredIlluminations\", \"value\": \"\", \"shape\": [\"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A food is manufactured by refining raw oils and blending them together. \n- The raw oils are either vegetable oils or non-vegetable oils. \n- Each oil \\var{i} may be purchased in month \\var{m} for price \\var{price_{i,m}}.\n- The final product sells at \\var{sell_price} per ton.\n- Vegetable oils and non-vegetable oils require different production lines for refining. \n- In any month, it is not possible to refine more than \\var{max_vegetable_refining_per_month} tons of vegetable oils and more than \\var{max_non_vegetable_refining_per_month} tons of non-vegetable oils. \n- There is no loss of weight in the refining process, and the cost of refining may be ignored.\n- It is possible to store up to \\var{storage_size} tons of each raw oil for use later. \n- The cost of storage for both vegetable and non-vegetable oil is \\var{storage_cost} per ton per month.\n- The final product cannot be stored, nor can refined oils be stored.\n- There is a technological restriction of hardness on the final product. \n- In the units in which hardness is measured, this must lie between \\var{max_hardness} and \\var{min_hardness}.\n- The hardness product is computed by the weighted average of hardness of each oil.\n- The hardness of oil \\var{i} is \\var{hardness_{i}}.\n- At present, there are \\var{init_amount} tons of each type of raw oil in storage. \n- We can assume that there is a month \"0\" to model the inital amount.\n- It is required that at the end of the last month, we still have the same amout of storage as \\var{init_amount}.\n- This means directly adding the constraint that the storage in the last month must be equal to \\var{init_amount}.\n\n\nINPUT FORMAT:\n\n{\n    \"buy_price\":[[price_{i, m} for i in 1,...,I] for m in 1,...,M],\n    \"sell_price\": sell_price,\n    \"is_vegetable\": [is_vegetable_{i} for i in 1,...,I],\n    \"max_vegetable_refining_per_month\": max_veg,\n    \"max_non_vegetable_refining_per_month\": max_non_veg,\n    \"storage_size\": storage_size,\n    \"storage_cost\": storage_cost,\n    \"max_hardness\": max_hardness,\n    \"min_hardness\": min_hardness,\n    \"hardness\": [hardness_{i} for i in 1,...,I],\n    \"init_amount\": init_amount\n}\n\n\nOBJECTIVE: What buying, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO: \n\n- \\var{buyquantity} represents the amount of buying quantity of each oil in each month\n- \\var{refine} represents the amount of refined quantity of each oil in each month\n- \\var{storage} represents the storage of each oil in each month\n \nOUTPUT FORMAT: \n\n{\n    \"buy\": [[buyquantity_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"refine\": [[refine_{i, m} for i in 1,...,I] for m in 1,...M],\n    \"storage\": [[storage_{i, m} for i in 1,...,I] for m in 1,...,M]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company deals with various items categorized into vegetables and non-vegetables, which are bought, refined, stored, and sold over a planning horizon of months. Refining capacity for both types of items is limited, and there are storage limitations with associated costs. The company must manage the hardness of the items and start with an initial amount of items in storage.\", \"constraints\": [\"All items bought, stored, and sold are non-negative\", \"Hardness of refined items must be at least MinHardness\", \"Hardness of refined items must not exceed MaxHardness\", \"At most MaxVegetableRefiningPerMonth vegetables can be refined per month\", \"At most MaxNonVegetableRefiningPerMonth non-vegetables can be refined per month\", \"Total storage used must not exceed StorageSize\", \"StorageSize must accommodate the InitialAmount of items\"], \"objective\": \"Maximize the company's profit by determining the optimal buying, storing, and manufacturing policy\", \"description\": \"A company is dealing with \\\\param{I} different items over a planning horizon of \\\\param{M} months. The buy price of item \\\\param{i} in month \\\\param{m} is given by \\\\param{BuyPrice}. All items can be sold after refining for the same \\\\param{SellPrice}. Each item is either a vegetable or not, which is indicated by \\\\param{IsVegetable}. There is a limited refining capability where at most \\\\param{MaxVegetableRefiningPerMonth} of vegetables and \\\\param{MaxNonVegetableRefiningPerMonth} of non-vegetables can be refined in any given month. The company has a storage size of \\\\param{StorageSize} and incurs a \\\\param{StorageCost} for storing items per month. The refined products must fall within a hardness range of \\\\param{MinHardness} to \\\\param{MaxHardness}, where the hardness of item \\\\param{i} is \\\\param{Hardness}. Initially, the storage contains an amount of \\\\param{InitialAmount} of items. What buying, storing, and manufacturing policy should the company pursue in order to maximize profit?\", \"parameters\": [{\"definition\": \"Number of months\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different items\", \"symbol\": \"I\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Month m buy price of item i\", \"symbol\": \"BuyPrice\", \"value\": \"\", \"shape\": [\"M\", \"I\"]}, {\"definition\": \"Sell price of the products after refining\", \"symbol\": \"SellPrice\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Indicator whether item i is a vegetable\", \"symbol\": \"IsVegetable\", \"value\": \"\", \"shape\": [\"I\"]}, {\"definition\": \"Maximum refining capability for vegetables per month\", \"symbol\": \"MaxVegetableRefiningPerMonth\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum refining capability for non-vegetables per month\", \"symbol\": \"MaxNonVegetableRefiningPerMonth\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Size of the storage\", \"symbol\": \"StorageSize\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost for storing items per month\", \"symbol\": \"StorageCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The maximum hardness allowed for the products after refining\", \"symbol\": \"MaxHardness\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The minimum hardness required for the products after refining\", \"symbol\": \"MinHardness\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Hardness of item i\", \"symbol\": \"Hardness\", \"value\": \"\", \"shape\": [\"I\"]}, {\"definition\": \"Initial amount of items in storage at the beginning of the planning horizon\", \"symbol\": \"InitialAmount\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A farmer wishes to plan production on his \\var{all_space} acre farm over the next five years. \n- At present, he has a herd of 120 cows. \n- This is made up of \\var{n_heifers} heifers and \\var{n_milk} milk-producing cows. \n- Each heifer needs \\var{heifer_space} acre to support it and each dairy cow \\var{cow_space} acre. \n- A dairy cow produces an average of \\var{cow_calve} calves per year. \n- Half of these calves will be bullocks, which are sold almost immediately for an average of \\var{price_bullock} each. \n- The remaining heifers can be either sold almost immediately for \\var{price_heifer} or reared to become milk-producing cows at two years old. \n- It is intended that all dairy cows be sold at 12 years old for an average of \\var{price_cow} each, although there will probably be an annual loss of \\var{loss_heifer} per year among heifers and \\var{loss_cow} among dairy cows. \n- At present, there are 10 cows each aged from newborn to 11 years old. \n- The decision of how many heifers to sell in the current year has already been taken and implemented.\n- The milk from a cow yields an annual revenue of \\var{revenue_milk}. \n- A maximum of \\var{n_maxcow} cows can be housed at the present time. \n- To provide accommodation for each cow beyond this number will entail a capital outlay of \\var{cow_outlay} per cow. \n- Each milk- producing cow requires \\var{cow_grain} tons of grain and \\var{cow_sugar} tons of sugar beet per year. \n- Grain and sugar beet can both be grown on the farm. \n- Each acre yields \\var{sugar_per_acre} tons of sugar beet. \n- Only \\var{space_grain} acres are suitable for growing grain. \n- They can be divided into groups.\n- Group \\var{k} has space \\var{graindivision_{k}} and yields \\var{yield_{k}} tons per acre.\n- Grain can be bought for \\var{buyprice_grain} per ton and sold for \\var{sellprice_grain} per ton. \n- Sugar beet can be bought for \\var{buyprice_sugar} per ton and sold for \\var{sellprice_sugar} per ton.\n- Each heifer requires \\var{labour_heifers} hours of labour per year.\n- Each milk-producing cow requires \\var{labour_cow} hours of labour per year.\n- Each acre put into grain requires \\var{labour_grain} hours of labour per year.\n- Each acre put into sugar beet requires \\var{labour_sugar} hours of labour per year.\n- There are also extra costs.\n- Each heifer requires \\var{extra_heifers} per year.\n- Each milk-producing cow requires \\var{extra_cow} per year.\n- Each acre put into grain requires \\var{extra_grain} per year.\n- Each acre put into sugar beet requires \\var{extra_sugar} per year.\n- Labour costs for the farm are at present \\var{labour_cost} per year and provide \\var{labour_hour} labour. \n- Any labour needed above this will cost \\var{extra_labour_cost} per hour.\n- Any capital expenditure would be financed by a 10-year loan at 15% annual interest. \n- The interest and capital repayment would be paid in 10 equally sized yearly installments. \n- In no year can the cash flow be negative. \n- Finally, the farmer would neither wish to reduce the total number of dairy cows at the end of the five-year period by more than 50% nor wish to increase the number by more than 75%.\n\n\nINPUT FORMAT:\n\n{\n    \"all_space\": all_space,\n    \"n_heifers\": n_heifers,\n    \"n_milk\": n_milk,\n    \"heifer_space\": heifer_space,\n    \"cow_space\": cow_space,\n    \"cow_calve\": cow_calve,\n    \"price_bullock\": price_bullock,\n    \"price_heifer\": price_heifer,\n    \"price_cow\": price_cow,\n    \"loss_heifer\": loss_heifer,\n    \"loss_cow\": loss_cow,\n    \"revenue_milk\": revenue_milk,\n    \"n_maxcow\": n_maxhouse,\n    \"cow_outlay\": cow_outlay,\n    \"cow_grain\": cow_grain,\n    \"cow_sugar\": cow_sugar,\n    \"sugar_per_acre\": sugar_per_acre,\n    \"space_grain\": space_grain,\n    \"graindivision\": [graindivision_{k} for k in 1,...,K],\n    \"yield\": [yield_{k} for k in 1,...,K],\n    \"buyprice_grain\": buyprice_grain,\n    \"sellprice_grain\": sellprice_grain,\n    \"buyprice_sugar\": buyprice_sugar,\n    \"sellprice_sugar\": sellprice_sugar,\n    \"labour_heifers\": labour_heifers,\n    \"labour_cow\": labour_cow,\n    \"labour_grain\": labour_grain,\n    \"labour_sugar\": labour_sugar,\n    \"extra_heifers\": extra_heifers,\n    \"extra_cow\": extra_cow,\n    \"extra_grain\": extra_grain,\n    \"extra_sugar\": extra_sugar,\n    \"labour_cost\": labour_cost,\n    \"labour_hour\": labour_hour,\n    \"extra_labour_cost\": extra_labour_cost\n}\n\nOBJECTIVE: How should the farmer operate over the next five years to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sellheifer} represents the amount of heifer to sell in future five years\n- \\var{spacegrain} represents how much space should be used for grain each year\n- \\var{spacesugar} represents how much space should be used for sugar beet each year\n\nOUTPUT FORMAT:\n\n{\n    \"sellheifer\": [sellheifer_{i} for i = 1,...,5]\n    \"spacegrain\": [spacegrain_{i} for i = 1,...,5]\n    \"spacesugar\": [spacesugar_{i} for i = 1,...,5]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A farmer is planning operation over the next five years to maximize profit. This involves decisions about space allocation, livestock management (heifers and cows), milk production, calving, crop cultivation (grains and sugar), and labor distribution while considering various costs, revenues, and resource constraints.\", \"constraints\": [\"Total space used by heifers and cows cannot exceed AllSpace\", \"Number of heifers is initially NHeifers and cannot be negative\", \"Each cow can calve at most CowCalve times over the five years\", \"Number of cows cannot exceed NMaxCow\", \"Number of acres allocated to sugar production cannot exceed SugarPerAcre\", \"Number of acres allocated to grain production cannot exceed SpaceGrain\", \"Total space allocated to grain must be a multiple of GrainDivision\", \"Maximum labour hours available without extra cost is LabourHour\"], \"objective\": \"Maximize the farmer's profit over the next five years\", \"description\": \"How should the farmer operate over the next five years to maximize profit using \\\\param{AllSpace}, \\\\param{NHeifers}, \\\\param{NMilk}, \\\\param{HeiferSpace}, \\\\param{CowSpace}, \\\\param{CowCalve}, \\\\param{PriceBullock}, \\\\param{PriceHeifer}, \\\\param{PriceCow}, \\\\param{LossHeifer}, \\\\param{LossCow}, \\\\param{RevenueMilk}, \\\\param{NMaxCow}, \\\\param{CowOutlay}, \\\\param{CowGrain}, \\\\param{CowSugar}, \\\\param{SugarPerAcre}, \\\\param{SpaceGrain}, \\\\param{GrainDivision}, \\\\param{GrainYield}, \\\\param{BuyPriceGrain}, \\\\param{SellPriceGrain}, \\\\param{BuyPriceSugar}, \\\\param{SellPriceSugar}, \\\\param{LabourHeifers}, \\\\param{LabourCow}, \\\\param{LabourGrain}, \\\\param{LabourSugar}, \\\\param{ExtraHeifers}, \\\\param{ExtraCow}, \\\\param{ExtraGrain}, \\\\param{ExtraSugar}, \\\\param{LabourCost}, \\\\param{LabourHour}, and \\\\param{ExtraLabourCost}?\", \"parameters\": [{\"definition\": \"Total space available for all animals and activities\", \"symbol\": \"AllSpace\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of heifers\", \"symbol\": \"NHeifers\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Quantity of milk produced\", \"symbol\": \"NMilk\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Space required per heifer\", \"symbol\": \"HeiferSpace\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Space required per cow\", \"symbol\": \"CowSpace\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of calves per cow\", \"symbol\": \"CowCalve\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Price of a sold bullock\", \"symbol\": \"PriceBullock\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Price of a sold heifer\", \"symbol\": \"PriceHeifer\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Price of a sold cow\", \"symbol\": \"PriceCow\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Loss for selling a heifer\", \"symbol\": \"LossHeifer\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Loss for selling a cow\", \"symbol\": \"LossCow\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Revenue from milk production\", \"symbol\": \"RevenueMilk\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum number of cows that can be housed\", \"symbol\": \"NMaxCow\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Outlay for maintaining a cow\", \"symbol\": \"CowOutlay\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of grain consumed by a cow\", \"symbol\": \"CowGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of sugar consumed by a cow\", \"symbol\": \"CowSugar\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of sugar produced per acre\", \"symbol\": \"SugarPerAcre\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Space required per acre of grain\", \"symbol\": \"SpaceGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Division of overall space dedicated to grain production\", \"symbol\": \"GrainDivision\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Yield of grain per acre\", \"symbol\": \"GrainYield\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Buy price of grain\", \"symbol\": \"BuyPriceGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Sell price of grain\", \"symbol\": \"SellPriceGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Buy price of sugar\", \"symbol\": \"BuyPriceSugar\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Sell price of sugar\", \"symbol\": \"SellPriceSugar\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour hours required for heifers\", \"symbol\": \"LabourHeifers\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour hours required for cows\", \"symbol\": \"LabourCow\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour hours required for grain production\", \"symbol\": \"LabourGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour hours required for sugar production\", \"symbol\": \"LabourSugar\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra heifers\", \"symbol\": \"ExtraHeifers\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra cows\", \"symbol\": \"ExtraCow\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra grain\", \"symbol\": \"ExtraGrain\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra sugar\", \"symbol\": \"ExtraSugar\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour cost\", \"symbol\": \"LabourCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Labour hours available\", \"symbol\": \"LabourHour\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Extra labour cost\", \"symbol\": \"ExtraLabourCost\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small firm specializes in making some types of spare automobile parts. \n- Each part is has to go through several shops \n- The required worker-hours for part \\var{k} in shop \\var{s} is \\var{time_{k, s}}.\n- The profit of part \\var{k} is \\var{profit_{k}}.\n- The capacity of shop \\var{s} is \\var{capacity_{s}} working hours.\n\nINPUT FORMAT:\n\n{\n\t\"time\": [[time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"profit\": [profit_{k} for k in 1,...,K],\n\t\"capacity\": [capacity_{s} for s in 1,...,S]\n}\n\n\nOBJECTIVE: Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize profit.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the amount of each spare part to be made\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves determining the optimal quantities of various spare parts to be produced in a month, considering the time required on different machines and the machines' monthly capacities.\", \"constraints\": [\"Every spare part quantity produced is non-negative\", \"Total time used on each machine for all spare parts cannot exceed the machine's monthly capacity\"], \"objective\": \"Maximize the total profit from the production of spare parts\", \"description\": \"Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize \\\\param{Profit}. Each spare part k requires \\\\param{Time} on machine s, and each machine s has a maximum monthly capacity of \\\\param{Capacity}.\", \"parameters\": [{\"definition\": \"Number of spare parts to be produced\", \"symbol\": \"NumParts\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of machines available\", \"symbol\": \"NumMachines\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The time taken to make one unit of spare part k on machine s\", \"symbol\": \"Time\", \"value\": \"\", \"shape\": [\"NumParts\", \"NumMachines\"]}, {\"definition\": \"Profit from producing one unit of spare part k\", \"symbol\": \"Profit\", \"value\": \"\", \"shape\": [\"NumParts\"]}, {\"definition\": \"Capacity of machine s for the month\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"NumMachines\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- An engineering factory makes several products on the machines, and the number of machine \\var{m} the factory has is \\var{num_{m}}.\n- Each product \\var{k} yields \\var{profit_{k}} to profit (defined as £/unit selling price minus cost of raw materials).\n- The unit production times (hours) product \\var{k} requires on machine \\var{m} is \\var{time_{k, m}}\n- In the present month (January) and several subsequent months, certain machines will be down for maintenance.\n- In month \\var{i}, the number of machine \\var{m} that will be down is \\var{maintain_{i, m}}.\n- There are marketing limitations on each product in each month. \n- The limitation of product \\var{k} in month \\var{i} is \\var{limit_{k, i}}.\n- It is possible to store up to 100 of each product at a time at a cost of \\var{store_price} per unit per month. \n- There are no stocks at present, but we should have a stock of \\var{keep_quantity} of each type of product at the end of subsequent months.\n- The factory works six days a week with \\var{n_workhours} hours each day. \n- No sequencing problems need to be considered.\n- We can assume that a month has 24 days for convenience.\n\nINPUT FORMAT:\n\n{\n    \"num_machines\": [num_{m} for m in 1,...,M],\n    \"profit\": [profit_{k} for k in 1,...K],\n    \"time\": [[time_{k, m} for m in 1,...,M] for k in 1,...,K],\n    \"maintain\": [[maintain_{i, m} for m in 1,...,M] for i in 1,...,I],\n    \"limit\": [[limit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"store_price\": store_price,\n    \"keep_quantity\": keep_quantity,\n    \"n_workhours\": n_workhours\n}\n\nOBJECTIVE: What selling, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sell} represents the amount of selling quantity of each product in each month\n- \\var{manufacture} represents the amount of manufactured products in each month\n- \\var{storage} represents the storage of each product in each month\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [[sell_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"manufacture\": [[manufacture_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"storage\": [[storage_{k, i} for k in 1,...,K] for i in 1,...,I]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A company with multiple machines and product lines seeks to maximize profit while managing manufacturing, maintenance, storage, and inventory constraints.\", \"constraints\": [\"Each machine can operate up to WorkHours per time period\", \"Storage limit for product k in time period i is given by Limit\", \"The number of machines utilized is limited to M\", \"Maintenance, manufacturing, and storage times fit within the available WorkHours\", \"Products must have non-negative production and storage quantities\"], \"objective\": \"Maximize the company's profit from selling its products while minimizing storage and production costs\", \"ambiguities\": [\"The exact relationship between manufacturing time and the number of products is not specified.\", \"Whether the storage price is per unit, per time period, or a combination is not clear.\", \"It is unclear if profit per product k is a constant value or if it varies.\", \"The way that the KeepQuantity affects the production or storage decision is not specified.\", \"How the maintenance time affects machine availability across different time periods needs clarification.\"], \"description\": \"What selling, storing and manufacturing policy should the company pursue in order to maximize profit? The company has \\\\param{M} machines and produces \\\\param{K} different products. Each product k has a profit of \\\\param{Profit}. The time taken to manufacture product k on machine m is given by \\\\param{Time}. There are maintenance times for each machine m in each time period i, denoted by \\\\param{Maintain}. The limit for storing product k for time period i is given by \\\\param{Limit}, and the company has a store price of \\\\param{StorePrice}. The company aims to keep a quantity of \\\\param{KeepQuantity} for product k, and there are \\\\param{WorkHours} working hours available for production.\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Profit for product k\", \"symbol\": \"Profit\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Time taken by product k on machine m\", \"symbol\": \"Time\", \"value\": \"\", \"shape\": [\"K\", \"M\"]}, {\"definition\": \"Maintenance time for machine m in time period i\", \"symbol\": \"Maintain\", \"value\": \"\", \"shape\": [\"I\", \"M\"]}, {\"definition\": \"Limit of storing product k for time period i\", \"symbol\": \"Limit\", \"value\": \"\", \"shape\": [\"K\", \"I\"]}, {\"definition\": \"Price for storing products\", \"symbol\": \"StorePrice\", \"value\": 0.33, \"shape\": []}, {\"definition\": \"Quantity of product k to keep\", \"symbol\": \"KeepQuantity\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of working hours\", \"symbol\": \"WorkHours\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\nPROBLEM INFO:\n\n- Before going on vacation you want to make floppy disk backups of important files. \n- You have at your disposal several blank floppy disks with capacities of \\var{capacity} GB. \n- They are given the size of the files that you want to save.\n- Each file \\var{j} has size \\var{size_{j}}.\n- Assuming that you do not have any programs to compress the data and that you have enough floppy disks available for back up everything.\n\nINPUT FORMAT:\n\n{\n\t\"capacity\": capacity,\n\t\"size\": [size_{j} for j in 1,...,N]\n}\n\nOBJECTIVE: How to distribute these files on the floppy disks in order to minimize the number of floppy disks used.\n\nOUTPUT INFO:\n\n- \\var{n_disks} represents the total number of floppy disks used\n- \\var{whichdisk} represents on which disk each file is distributed. Its length is determined by \\var{n_disks}\n\nOUTPUT FORMAT:\n\n{\n\t\"n_disks\": n_disks,\n\t\"whichdisk\": [disk_{j} for j in 1,...,N]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to determine the optimal distribution of N different files across floppy disks in a way that minimizes the total number of floppy disks used.\", \"constraints\": [\"The sum of file sizes on each floppy disk cannot exceed the Capacity\", \"Each file must be placed on exactly one floppy disk\", \"File sizes are non-negative\"], \"objective\": \"Minimize the number of floppy disks used in the distribution of files\", \"description\": \"How to distribute these files on the floppy disks in order to minimize the number of floppy disks used, given that each floppy disk has a \\\\param{Capacity} and there are N different files with sizes represented by \\\\param{Size}.\", \"parameters\": [{\"definition\": \"Total capacity of a floppy disk\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Size of each file j\", \"symbol\": \"Size\", \"value\": \"\", \"shape\": [\"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A foundry receives a specific order for \\var{n_steel_quant} tons of steel. \n- This steel must meet the following characteristics: it must contain at least \\var{mn_percent} percentage of manganese (Mn) while its percentage of silicon (SI) must be between \\var{si_min} and \\var{si_max}.\n- To cast this steel, the foundry has limited quantities of several types of minerals.\n- The contents expressed in percentage per mineral \\var{k} are \\var{contsi_{k}} for Si and \\var{contmn_{k}} for Mn.\n- The process for producing steel is such that direct addition of Mn is possible.\n- This Manganese is available at a price of \\var{mang_price} million euros per ton. \n- As for the minerals, it costs \\var{cost_{k}} million euros per thousand tons for mineral \\var{k}.\n- The foundry plans to sell the steel produced at \\var{sell_price} million euros per ton.\n- The cost of smelting a ton of mineral is \\var{melt_price} million euros.\n\nINPUT FORMAT:\n\n{\n\t\"n_steel_quant\": n_steel_quant,\n\t\"mn_percent\": mn_percent,\n\t\"si_min\": si_min,\n\t\"si_max\": si_max,\n\t\"contsi\": [contsi_{k} for k in 1,...,K]\n\t\"contmn\": [contmn_{k} for k in 1,...,K]\n\t\"mang_price\": mang_price,\n\t\"cost\": [cost_{k} for k in 1,...,K]\n\t\"sell_price\": sell_price,\n\t\"melt_price\": melt_price\n}\n\nOBJECTIVE: How should the manufacture manage the steel to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{amount} represents the amount of each mineral melted\n- \\var{num_mang} represents the amount of Manganese directly added\n\nOUTPUT FORMAT:\n\n{\n\t\"amount\": [amount_{k} for k in 1,...,K]\n\t\"num_mang\": [num_mang]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The manufacturer has to manage steel production to meet specific manganese and silicon content percentages in order to maximize profits. This involves deciding the optimal quantity of steel to produce, while taking material costs, selling prices, and melting costs into account.\", \"constraints\": [\"Total quantity of steel produced is SteelQuantity tons\", \"Steel must contain ManganesePercent percent manganese\", \"Silicon content in steel must be at least SiliconMinPercent percent\", \"Silicon content in steel must be at most SiliconMaxPercent percent\"], \"objective\": \"Maximize the company's profit from the steel produced\", \"description\": \"How should the manufacture manage the steel to maximize profit? The manufacture has to decide on the optimal quantity of \\\\param{SteelQuantity} tons of steel to produce, taking into account the required \\\\param{ManganesePercent} percent manganese and ensuring the silicon content is between \\\\param{SiliconMinPercent} percent and \\\\param{SiliconMaxPercent} percent. The available stocks contain \\\\param{SiliconContent} percent Silicon and \\\\param{ManganeseContent} percent Manganese. The price of manganese is set at \\\\param{ManganesePrice} per ton, and the material cost for each stock is \\\\param{MaterialCost}. The company sells the steel at a price of \\\\param{SellingPrice} per ton but also incurs a melting cost of \\\\param{MeltingPrice} per ton.\", \"parameters\": [{\"definition\": \"Amount of steel to produce in tons\", \"symbol\": \"SteelQuantity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Percentage of manganese in the steel required\", \"symbol\": \"ManganesePercent\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Minimum percentage of silicon in the steel required\", \"symbol\": \"SiliconMinPercent\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum percentage of silicon in the steel allowed\", \"symbol\": \"SiliconMaxPercent\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Silicon content in the k-th stock\", \"symbol\": \"SiliconContent\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Manganese content in the k-th stock\", \"symbol\": \"ManganeseContent\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Price of manganese per ton\", \"symbol\": \"ManganesePrice\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of the k-th stock material per ton\", \"symbol\": \"MaterialCost\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Selling price of steel per ton\", \"symbol\": \"SellingPrice\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Price to melt one ton of steel\", \"symbol\": \"MeltingPrice\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- Consider the problem of operating a warehouse, by buying and selling the stock of a certain commodity, in order to maximize profit over a certain length of time, say several periods.\n- The warehouse has a fixed capacity \\var{capacity}, and there is a cost \\var{holding_cost} per unit for holding stock for one period.\n- The selling price, \\var{price_{n}}$, of the commodity is known to fluctuate over a number of time periods. \n- In any period \\var{n} the price holding for purchase is \\var{cost_{n}}.\n- The warehouse is originally empty and is required to be empty at the end of the last period.\n\nINPUT FORMAT:\n\n{\n\t\"capacity\": capacity,\n\t\"holding_cost\": holding_cost,\n\t\"price\", [price_{n} for n in 1,...,N],\n\t\"cost\": [cost_{n} for n in 1,...,N]\n}\n\n\nOBJECTIVE: Determine the amount of buying and selling in each period to maximize the profit over the months\n\nOUTPUT INFO:\n\n- \\var{buyquantity} represents the amount of buying in each period\n- \\var{sellquantity} represents the amount of selling in each period\n- \\var{stock} represents the stock in each period, excluding the intial stock\n\nOUTPUT FORMAT:\n\n{\n\t\"buyquantity\": [buyquantity_{n} for n in 1,...,N],\n\t\"sellquantity\": [sellquantity_{n} for n in 1,...,N],\n\t\"stock\": [stock_{n} for n in 1,...,N]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem focuses on finding an optimal trading strategy that involves deciding on the quantity of goods to buy and sell each month, considering storage capacity and associated costs.\", \"constraints\": [\"The amount of goods held in storage must be non-negative\", \"The amount of goods sold in each period must be non-negative\", \"The amount of goods bought in each period must be non-negative\", \"The amount of goods stored must not exceed the maximum storage capacity, Capacity\"], \"objective\": \"Maximize the total profit over the months from buying and selling goods\", \"description\": \"Determine the amount of buying and selling in each period to maximize the profit over the months, given the constraints of maximum storage \\\\param{Capacity}, holding costs \\\\param{HoldingCost}, selling prices \\\\param{Price}, and buying costs \\\\param{Cost}.\", \"parameters\": [{\"definition\": \"Maximum storage capacity\", \"symbol\": \"Capacity\", \"value\": 0, \"shape\": []}, {\"definition\": \"Cost of holding one unit of product\", \"symbol\": \"HoldingCost\", \"value\": 0, \"shape\": []}, {\"definition\": \"Selling price in each period\", \"symbol\": \"Price\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Cost of buying in each period\", \"symbol\": \"Cost\", \"value\": 0, \"shape\": [\"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- The knapsack problem has a significant place in the study of integer programming models with binary variables. \n- In the knapsack problem, one needs to pack a set of items in a container.\n- Each item \\var{k} has value \\var{value_{k}} and size \\var{size_{k}}.\n- And the container has maximum capacity \\var{C}. \n- If the total size of the items exceeds the capacity, we can't pack them all. \n- In that case, the problem is to choose a subset of the items of maximum total value that will fit in the container. \n\nINPUT FORMAT:\n\n{\n\t\"C\": C,\n\t\"value\": [value_{k} for k in 1,...,K],\n\t\"size\": [size_{k} for k in 1,...,K]\n}\n\n\nOBJECTIVE: Maximize the total value of the packed items\n\nOUTPUT INFO:\n\n- \\var{isincluded} represents whether each item is included in the container\n\nOUTPUT FORMAT:\n\n{\n\t\"isincluded\": [isincluded_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Determine the selection of items to include in a knapsack that has a fixed capacity, where each item has an associated value and size.\", \"constraints\": [\"The total size of the items in the knapsack must not exceed the capacity C\", \"Each item can either be included or not in the knapsack - cannot be fractioned\", \"The knapsack capacity C is non-negative\", \"Each item k has a non-negative size\", \"Each item k has a non-negative value\"], \"objective\": \"Maximize the total value of the items packed in the knapsack\", \"description\": \"Maximize the total value of the packed items, where the knapsack has a capacity of \\\\param{C}. Each item k has a value of \\\\param{Value} and a size of \\\\param{Size}.\", \"parameters\": [{\"definition\": \"Total Capacity of the Knapsack\", \"symbol\": \"C\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Value of item k\", \"symbol\": \"Value\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Size of item k\", \"symbol\": \"Size\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A quantity y is known to depend on another quantity x. A set of corresponding values has been collected for x and y and is presented.\n- The \\var{k}-th y value takes \\var{y_{k}} and the \\var{k}-th x value takes \\var{x_{k}}.\n\nINPUT FORMAT:\n\n{\n    \"y\": [y_{k} for k = 1,...,K],\n    \"x\": [x_{k} for k = 1,...,K]\n}\n\n\nOBJECTIVE: Fit the ‘best’ straight line y = bx + a to this set of data points. The objective is to minimise the sum of absolute deviations of each observed value of y from the value predicted by the linear relationship.\n\nOUTPUT INFO:\n\n- \\var{intercept} represents the intercept of the fitted line\n- \\var{slope} represents the slope of the fitted line\n\nOUTPUT FORMAT:\n\n{\n    \"intercept\": intercept,\n    \"slope\": slope\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves finding the 'best' linear relationship in the form of Y = bX + a that fits a set of data points. The 'best' fit minimizes the total absolute deviation of observed Y values from those predicted by the linear equation.\", \"constraints\": [], \"objective\": \"Minimize the sum of absolute deviations between the observed Y values and the values predicted by the model Y = bX + a\", \"description\": \"Fit the 'best' straight line \\\\param{Y} = b\\\\param{X} + a to this set of data points. The objective is to minimise the sum of absolute deviations of each observed value of \\\\param{Y} from the value predicted by the linear relationship.\", \"parameters\": [{\"definition\": \"Number of data points\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Observed values of the dependent variable\", \"symbol\": \"Y\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Observed values of the independent variable\", \"symbol\": \"X\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- The network faces an intrusion that requires immediate intervention.\n- Interventions include isolating nodes or scanning nodes affected by the intruder.\n- Each cluster of nodes must be treated with one intervention type consistently.\n- Interventions can be processed either centrally or through distributed nodes.\n- The processing times for each type of intervention are different across \\var{N} clusters.\n- The opportunity cost for processing is $\\var{central_cost}/h for central and $\\var{distributed_cost}/h for distributed processing.\n- There is a maximum allotment of \\var{max_central} hours for central processing and \\var{max_distributed} hours for distributed processing to address the intrusion.\n\nINPUT FORMAT: \n\n{\n    \"processing_times\": {\n        \"central\": {\n            \"isolate\": [isolate_central_{i} for i in 1, ..., N],\n            \"scan\": [scan_central_{i} for i in 1, ..., N]\n        },\n        \"distributed\": {\n            \"isolate\": [isolate_distributed_{i} for i in 1, ..., N],\n            \"scan\": [scan_distributed_{i} for i in 1, ..., N]\n        }\n    },\n    \"costs\": {\n        \"central\": central_cost,\n        \"distributed\": distributed_cost\n    },\n    \"max_hours\": {\n        \"central_max_hours\": max_central,\n        \"distributed_max_hours\": max_distributed\n    }\n}\n\nOBJECTIVE: Determine the most cost-effective combination of interventions to halt the intruder's progress within the network.\n\nOUTPUT INFO:\n\n- The output details the intervention type ('isolate' or 'scan') and processing method ('central' or 'distributed') for each cluster.\n- The \\var{total_cost} is the sum of costs for all interventions across the clusters.\n\nOUTPUT FORMAT:\n\n{\n    \"interventions\": {\n        [\n            {\n            \"cluster_id\": cluster_id\n            \"type\": \"isolate\" or \"scan\",\n            \"method\": \"central\" or \"distributed\",\n            \"amount\": amount_i\n            },\n            for i in 1, ..., N\n        ]\n    },\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves finding an optimal combination of interventions to prevent an intruder's progress in a network, considering processing times and costs of interventions at both central and distributed systems, within given maximum hours of operation.\", \"constraints\": [\"Processing time for isolation in the central system multiplied by the number of such interventions is less than or equal to CentralMaxHours\", \"Processing time for scanning in the central system multiplied by the number of such interventions is less than or equal to CentralMaxHours\", \"Processing time for isolation in the distributed system multiplied by the number of such interventions is less than or equal to DistributedMaxHours\", \"Processing time for scanning in the distributed system multiplied by the number of such interventions is less than or equal to DistributedMaxHours\", \"The total number of interventions for both systems is equal to N\", \"Number of central system interventions is non-negative and integer-valued\", \"Number of distributed system interventions is non-negative and integer-valued\"], \"objective\": \"Minimize the total cost of interventions at the central and distributed systems\", \"description\": \"Determine the most cost-effective combination of interventions to halt the intruder's progress within the network. The MILP problem includes parameters: processing times at the central system (\\\\param{IsolateCentral}, \\\\param{ScanCentral}), processing times at the distributed system (\\\\param{IsolateDistributed}, \\\\param{ScanDistributed}), costs (\\\\param{CentralCost}, \\\\param{DistributedCost}), and maximum hours (\\\\param{CentralMaxHours}, \\\\param{DistributedMaxHours}) for a number of interventions \\\\param{N}.\", \"parameters\": [{\"definition\": \"Number of interventions\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Processing time for isolating at the central system for each intervention\", \"symbol\": \"IsolateCentral\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Processing time for scanning at the central system for each intervention\", \"symbol\": \"ScanCentral\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Processing time for isolating at the distributed system for each intervention\", \"symbol\": \"IsolateDistributed\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Processing time for scanning at the distributed system for each intervention\", \"symbol\": \"ScanDistributed\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Cost for central system intervention\", \"symbol\": \"CentralCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost for distributed system intervention\", \"symbol\": \"DistributedCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum hours of operation for the central system\", \"symbol\": \"CentralMaxHours\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Maximum hours of operation for the distributed system\", \"symbol\": \"DistributedMaxHours\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- Machine \\var{1} requires a setup time of \\var{setup_time_{p}} hours before it can be used for each part \\var{p}.\n- Other machines do not require a setup time.\n- There are no minimum production quantities for any part.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"setup_time\": [setup_time_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{setup_flags_{p}} indicates whether \\var{part_{p}} is set up or not.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"setup_flags\": [setup_flag_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer needs to decide the production quantity of different parts, considering machine constraints, to maximize profit.\", \"constraints\": [\"Each machine m can be used for up to Availability hours per month\", \"Time required to produce a batch of part p on machine m plus the setup time for part p must not exceed the available time on machine m\", \"Number of batches for each part is non-negative\"], \"objective\": \"Maximize profit, which is the total revenue from selling the parts minus the total operating costs of the machines\", \"description\": \"How many batches of each part should the manufacturer produce each month to maximize profit, taking into account the number of machines (\\\\param{M}), the number of types of parts (\\\\param{P}), the time required to produce a batch on machine \\\\param{m} for part \\\\param{p} (\\\\param{TimeRequired}), the cost of operating machine \\\\param{m} for a month (\\\\param{MachineCosts}), the time each machine \\\\param{m} is available for production each month (\\\\param{Availability}), the price at which part \\\\param{p} can be sold (\\\\param{Prices}), and the setup time required before producing a batch of part \\\\param{p} (\\\\param{SetupTime})?\", \"parameters\": [{\"definition\": \"The number of machines available\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The number of types of parts to produce\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The time required to produce a batch on machine m for part p\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"M\", \"P\"]}, {\"definition\": \"The cost of operating machine m for a month\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"The time each machine m is available for production each month\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"The price at which part p can be sold\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"The setup time required before producing a batch of part p\", \"symbol\": \"SetupTime\", \"value\": \"\", \"shape\": [\"P\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Custom Tees is planning an online advertising campaign with \\var{A} different ad types across two web companies.\n- The company has set a goal of \\var{goal_young} thousand clicks from visitors aged 18-25 and \\var{goal_old} thousand clicks from visitors older than 25.\n- The company has set a goal of \\var{goal_unique_young} thousand unique clicks from visitors aged 18-25 and \\var{goal_unique_old} thousand unique clicks from visitors older than 25.\n- Ad type \\var{a} has an estimated percentage of \\var{young_click_{a}} clicks from the 18-25 age range.\n- Ad type \\var{a} has an estimated percentage of \\var{old_click_{a}} clicks from older visitors.\n- Ad type \\var{a} has a cost of \\var{cost_{a}} per 1000 clicks.\n- Ad type \\var{a} has a maximum allowable clicks of \\var{max_click_{a}} in thousands.\n- The estimated percentage of unique visitors for each ad type \\var{a} is \\var{unique_click_{a}}.\n- The company has an advertising budget of $\\var{budget}\n\nINPUT FORMAT: \n\n{\n    \"goal_young\": goal_young,\n    \"goal_old\": goal_old,\n    \"goal_unique_young\": goal_unique_young,\n    \"goal_unique_old\": goal_unique_old,\n    \"young_clicks\": [young_click_{a} for a in 1,...,A],\n    \"old_clicks\": [old_click_{a} for a in 1,...,A],\n    \"costs\": [cost_{a} for a in 1,...,A],\n    \"max_clicks\": [max_click_{a} for a in 1,...,A],\n    \"unique_clicks\": [unique_click_{a} for a in 1,...,A],\n    \"budget\": budget\n}\n\nOBJECTIVE: How many clicks from each ad type should Custom Tees purchase to maximize the number of unique clicks within the budget?\n\nOUTPUT INFO:\n\n- the number of clicks purchased for each ad type is \\var{clicks_{a}} in thousands.\n- \\var{total_unique_clicks} represents the total number of unique clicks.\n\nOUTPUT FORMAT:\n\n{\n    \"clicks\": [click_{a} for a in 1, ..., A],\n    \"total_unique_clicks\": total_unique_clicks\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Custom Tees needs to allocate a budget for purchasing clicks from different advertisement types to maximize the number of unique clicks.\", \"constraints\": [\"Total cost of clicks from all advertisement types must not exceed Budget\", \"Number of clicks from each advertisement type must not exceed its corresponding MaxClicks\", \"Number of young audience clicks from all advertisement types must reach at least GoalYoung\", \"Number of old audience clicks from all advertisement types must reach at least GoalOld\", \"Number of unique young audience clicks from all advertisement types must reach at least GoalUniqueYoung\", \"Number of unique old audience clicks from all advertisement types must reach at least GoalUniqueOld\", \"Number of clicks from each advertisement type is non-negative\"], \"objective\": \"Maximize the number of unique clicks from all advertisement types within the given Budget\", \"description\": \"How many clicks from each ad type should Custom Tees purchase to maximize the number of unique clicks within the \\\\param{Budget}? Consider the following parameters: the total number of advertisement types (\\\\param{A}), costs of purchasing a click from each advertisement type (\\\\param{Costs}), the maximum number of clicks that can be purchased from each advertisement type (\\\\param{MaxClicks}), the number of young audience clicks from each advertisement type (\\\\param{YoungClicks}), the number of old audience clicks from each advertisement type (\\\\param{OldClicks}), and the number of unique clicks from each advertisement type (\\\\param{UniqueClicks}). Additionally, consider the goals for the number of clicks from the young (\\\\param{GoalYoung}) and old (\\\\param{GoalOld}) audience, as well as the goals for the number of unique clicks from the young (\\\\param{GoalUniqueYoung}) and old (\\\\param{GoalUniqueOld}) audience.\", \"parameters\": [{\"definition\": \"Number of advertisement types\", \"symbol\": \"A\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total budget for purchasing clicks\", \"symbol\": \"Budget\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of purchasing a click from advertisement type a\", \"symbol\": \"Costs\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of maximum clicks that can be purchased from advertisement type a\", \"symbol\": \"MaxClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of young audience clicks from advertisement type a\", \"symbol\": \"YoungClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of old audience clicks from advertisement type a\", \"symbol\": \"OldClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of unique clicks from advertisement type a\", \"symbol\": \"UniqueClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Goal for number of clicks from young audience\", \"symbol\": \"GoalYoung\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Goal for number of clicks from old audience\", \"symbol\": \"GoalOld\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Goal for number of unique clicks from young audience\", \"symbol\": \"GoalUniqueYoung\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Goal for number of unique clicks from old audience\", \"symbol\": \"GoalUniqueOld\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n- Extra available time for machine \\var{m} can be acquired at $\\var{extra_costs_{m}}/hour. \n- Up to \\var{max_extra_{m}} hours can be purchased for each machine \\var{m}.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P],\n    \"extra_costs\": [extra_cost_{m} for m in 1, ..., M],\n    \"max_extra\": [max_extra_{m} for m in 1, ..., M]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{extra_time} denotes the additional hours purchased for each machine \\var{m}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"extra_time\": [extra_time_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer needs to determine the quantity of batches for each part to produce monthly in order to maximize profit, with particular constraints on machines, parts, production time, costs, and sales parameters.\", \"constraints\": [\"Number of batches of each part is non-negative\", \"Total production time does not exceed the product of machine availability and the number of machines\", \"Minimum production of each part must meet or exceed MinBatches\", \"Total machine costs and extra costs should not exceed the sum of selling prices of all batches produced minus the production costs\", \"Extra hours used cannot exceed MaxExtra hours\"], \"objective\": \"Maximize the manufacturer's profit from part production, considering the costs and constraints on production capacity and time\", \"description\": \"How many batches of each part should the manufacturer produce each month to maximize profit, considering the following parameters: number of machines (\\\\param{M}), number of parts (\\\\param{P}), time required (\\\\param{TimeRequired}), machine costs (\\\\param{MachineCosts}), machine availability (\\\\param{Availability}), selling prices (\\\\param{Prices}), minimum batches required (\\\\param{MinBatches}), extra costs (\\\\param{ExtraCosts}), and maximum extra hours (\\\\param{MaxExtra})?\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of parts\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time required to produce a batch of part p on machine m\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"M\", \"P\"]}, {\"definition\": \"Cost associated with running machine m\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Availability of machine m for production each month\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Price obtained from selling a batch of part p\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Minimum number of batches of part p that should be produced\", \"symbol\": \"MinBatches\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Extra cost incurred when running machine m beyond regular operation\", \"symbol\": \"ExtraCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Maximum extra hours machine m can be run\", \"symbol\": \"MaxExtra\", \"value\": \"\", \"shape\": [\"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- We assume that there are available at the market different foods and that the food \\var{k} sells at a price \\var{price_{k}} per unit. \n- In addition there are several basic nutritional ingredients and, to achieve a balanced diet, each individual must receive at least \\var{demand_{m}} units of nutrient \\var{m} per day. \n- Finally, we assume that each unit of food \\var{k} contains \\var{nutri_{k, m}} units of nutrition \\var{m}\n\nINPUT FORMAT:\n\n{\n\t\"price\": [price_{k} for k in 1,...,K],\n\t\"demand\": [demand_{m} for m in 1,...,M],\n\t\"nutrition\": [[nutri_{k, m} for m in 1,...,M] for k in 1,...,K]\n}\n\n\nOBJECTIVE: We want to minimize the total prices of the foods to purchase.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the quantity of each food to purchase\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The task involves selecting a mix of different food types to purchase in order to satisfy nutritional demands at the minimum cost. Each food type has a set price, and a nutrition matrix detailing the amounts of various nutrients it contains.\", \"constraints\": [\"The total amount of each nutrient from all food types must meet or exceed the specific demand for that nutrient\", \"The number of units purchased from each food type is non-negative\"], \"objective\": \"Minimize the total price of the foods purchased while meeting the nutritional demands\", \"description\": \"We want to minimize the total prices of the foods to purchase. Each food type has a price, a nutrition matrix that contains the amount of nutrients in each food, and there is a demand for each type of nutrient to be met.\", \"parameters\": [{\"definition\": \"Number of different types of food\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of nutrients to consider\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Price of food k\", \"symbol\": \"Price\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Demand for nutrient m\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Amount of nutrient m in food k\", \"symbol\": \"Nutrition\", \"value\": \"\", \"shape\": [\"K\", \"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A manufacturer wishes to produce \\var{alloy_quant} lb of an alloy that consists of several kinds of metals.\n- And by weight, the alloy we want contains a target quantity\\var{target_{m}} of metal \\var{metal_{m}}.\n- Several other kinds of alloys are available at various prices. \n- These alloys can be melted to get the alloy we want.\n- Alloy \\var{k} has \\var{ratio_{k, m}} ratio of \\var{metal_{m}} and is sold at price of \\var{price_k}.\n- Ratio \\var{ratio_{k, m}} ranges between 0 and 1.0 and should be properly treated in optimization\n\nINPUT FORMAT:\n\n{\n\t\"alloy_quant\": alloy_quant,\n\t\"target\": [target_{m} for m in 1,...,M],\n\t\"ratio\": [[ratio_{k, m} for m in 1,...,M] for k = 1,...,K],\n\t\"price\": [price_{k} for k in 1,...,K]\n}\n\nOBJECTIVE: The manufacturer wishes to find the amounts of the various alloys needed and to determine the cheapest combination.\n\nOUTPUT INFO:\n\n- \\var{amount} represents the quantity of each alloy we buy\n\nOUTPUT FORMAT:\n\n{\n\t\"amount\": [amount_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The manufacturer is looking to determine the optimal combination of various alloys to produce a specified total quantity with certain target components at minimal cost.\", \"constraints\": [\"The total quantity of alloys produced is exactly AlloyQuantity\", \"The quantity of each target component in the alloy must be met or exceeded\", \"The quantity of component k in alloy m must adhere to the specified Ratio\", \"Each alloy's quantity is non-negative\"], \"objective\": \"Minimize the sum of the costs of the alloys used in the production\", \"description\": \"The manufacturer wishes to find the amounts of the various alloys needed and to determine the cheapest combination given \\\\param{AlloyQuantity}, the total quantity of alloy to produce, \\\\param{Target}, the quantity of target components in the alloy, \\\\param{Ratio}, the ratio of each component k in alloy m, and \\\\param{Price}, the price of each alloy k.\", \"parameters\": [{\"definition\": \"Quantity of alloy to produce\", \"symbol\": \"AlloyQuantity\", \"value\": 0, \"shape\": []}, {\"definition\": \"Quantity of target components in the alloy\", \"symbol\": \"Target\", \"value\": 0, \"shape\": [\"M\"]}, {\"definition\": \"Ratio of each component k in the alloy m\", \"symbol\": \"Ratio\", \"value\": 0, \"shape\": [\"K\", \"M\"]}, {\"definition\": \"Price of each alloy k\", \"symbol\": \"Price\", \"value\": 0, \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- Machine \\var{M} and Machine \\var{M-1} can share availability.\n- Individual availability conditions for Machine \\var{M} and Machine \\var{M-1} can be disregarded.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer is producing multiple parts using several machines, where each machine has associated costs, time requirements, and monthly availability. Each part has a selling price and a minimum production requirement.\", \"constraints\": [\"Number of batches for each part p is non-negative\", \"Each machine m can be used for up to Availability[m] hours per month\", \"Each part p must be produced in at least MinBatches[p] batches\", \"The total time used on each machine m by all parts p does not exceed TimeRequired[m][p] multiplied by the number of batches for part p, summed across all parts\"], \"objective\": \"Maximize the manufacturer's profit from producing parts, which is calculated from the selling prices of parts minus the costs of using machines\", \"description\": \"How many batches of each part should the manufacturer produce each month to maximize profit? The manufacturer has \\\\param{M} machines and \\\\param{P} parts to be produced. Each machine m has an associated cost of \\\\param{MachineCosts}, time requirement \\\\param{TimeRequired}, and availability \\\\param{Availability} per month. Each part p has a selling price \\\\param{Prices} and a production minimum requirement \\\\param{MinBatches}.\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of parts to be produced\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time required to produce a batch of part p on machine m\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"M\", \"P\"]}, {\"definition\": \"Cost associated with running machine m\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Availability of machine m per month\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Selling price of a batch of part p\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Minimum number of batches of part p that should be produced\", \"symbol\": \"MinBatches\", \"value\": \"\", \"shape\": [\"P\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A small electric utility operates \\var{P} power plants to supply electricity to \\var{C} cities.\n- Each power plant has a capacity of \\var{supply_{p}} million kwh.\n- Each city has a peak demand of \\var{demand_{c}} million kwh, which must be met at the same time.\n- Power plant \\var{p} can send electricity to city \\var{c} at a transmission cost of \\var{transmission_{p,c}} $/million kwh.\n\nINPUT FORMAT: \n\n{\n    \"supply\": [supply_{p} for p in 1, ..., P],\n    \"demand\": [demand_{c} for c in 1, ..., C],\n    \"transmission_costs\": [[transmission_{p,c} for c in 1, ..., C] for p in 1, ..., P]\n}\n\nOBJECTIVE: How much electricity should each power plant send to each city to minimize the total transmission cost?\n\nOUTPUT INFO:\n\n- the amount of electricity power plant \\var{p} sends to city \\var{c} as \\var{send_{p,c}} million kwh.\n- \\var{total_cost} displays the total transmission cost for the utility.\n\nOUTPUT FORMAT:\n\n{\n    \"send\": [[send_{p,c} for c in 1, ..., C] for p in 1, ..., P],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves the distribution of electricity from multiple power plants to multiple cities, with the goal of minimizing the transmission costs while respecting the supply and demand constraints of the power plants and cities respectively.\", \"constraints\": [\"Each power plant has a limited supply capacity of Supply\", \"Each city has a specific electricity demand of Demand\", \"The total electricity supplied to each city must meet its demand\", \"A power plant cannot send more electricity than its supply capacity\", \"Electricity sent from any power plant to any city is non-negative\"], \"objective\": \"Minimize the total transmission cost from power plants to cities\", \"description\": \"How much electricity should each power plant send to each city to minimize the total transmission cost, given there are \\\\param{P} power plants with a supply capacity of \\\\param{Supply}, \\\\param{C} cities with a demand of \\\\param{Demand}, and the transmission costs between power plants and cities are \\\\param{TransmissionCosts}?\", \"parameters\": [{\"definition\": \"Number of power plants\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of cities\", \"symbol\": \"C\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Electricity supply capacity of power plant p\", \"symbol\": \"Supply\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Electricity demand of city c\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"C\"]}, {\"definition\": \"Transmission cost from power plant p to city c\", \"symbol\": \"TransmissionCosts\", \"value\": \"\", \"shape\": [\"P\", \"C\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A team of translators is being assem- bled for the summer Olympics to translate from English into the \\{M} other languages.\n- There is a pool of \\var{N} translators available.\n- Each translator \\var{i} can translate into a certain set of \\var{languages} and comes with a specific \\var{cost_i}.\n\nINPUT FORMAT: \n\n{\n\"translators\": [\n        {\"id\": i, \n         \"cost\": cost_i,\n         \"languages\": [language_j for j in 1, ..., L_i]\n        },\n        for n in 1, ..., N\n    ],\n    \"required_languages\": [language_m for m in 1, ..., M]\n}\n\nOBJECTIVE: Select the combination of translators that ensures all required languages can be translated into, at the minimum possible cost.\n\nOUTPUT INFO:\n\n- \\var{selected_translators} represents the list of translators chosen.\n- \\var{total_cost} shows the total cost for hiring the selected translators.\n\nOUTPUT FORMAT:\n\n{\n    \"selected_translators\": [translator_ids],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A selection problem for hiring translators. Each translator can translate different sets of languages, and has an associated cost. The task is to cover all required languages at the minimum cost.\", \"constraints\": [\"Each of the M required languages must be translated into\", \"Only translators from the set of N translators can be selected\"], \"objective\": \"Minimize the total cost of translators while ensuring coverage for all M required languages\", \"description\": \"Select the combination of translators that ensures all required languages can be translated into, at the minimum possible cost. There are \\\\param{N} translators, each with an associated cost of \\\\param{Cost}. Each translator i is capable of translating a set of languages \\\\param{Languages}. The objective is to meet the translation needs for \\\\param{M} required languages, listed in \\\\param{RequiredLanguages}.\", \"parameters\": [{\"definition\": \"Number of translators\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of translator i\", \"symbol\": \"Cost\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Set of languages that translator i can translate\", \"symbol\": \"Languages\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Number of required languages\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"List of required languages\", \"symbol\": \"RequiredLanguages\", \"value\": \"\", \"shape\": [\"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO:\n\n- A company has \\var{I} projects to be done by consultants.\n- They have a choice of \\var{J} consultants.\n- Each consultant may be assigned up to \\var{K} projects. \n- Hiring consultant \\var{j} incurs a fixed cost of \\var{f_j}.\n- Assigning project \\var{i} to consultant \\var{j} incurs an additional cost of \\var{c_{i,j}}.\n\nINPUT FORMAT: \n\n{\n    \"fixed_costs\": [f_j for j in 1, ..., J],\n    \"additional_costs\": [[c_{i,j} for j in 1, ..., J] for i in 1, ..., I],\n    \"max_projects_per_consultant\": K\n}\n\nOBJECTIVE: Determine the assignment of consultants to projects that minimizes the total cost.\n\nOUTPUT INFO:\n\n- The projects assigned to each consultant \\var{assignment_{j,i}}.\n- \\var{total_cost} reflects the total cost of hiring consultants and assigning them to projects.\n\nOUTPUT FORMAT:\n\n{\n    \"assignments\": [[assignment_{j,i} for i in 1, ..., I] for j in 1, ..., J],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Assign consultants to projects in a way that minimizes the total cost, considering fixed costs per project, additional costs for assigning specific consultants to specific projects, and the maximum number of projects a consultant can handle.\", \"constraints\": [\"Each consultant can handle up to MaxProjectsPerConsultant projects\", \"Each project must be assigned at least one consultant\", \"Consultants must be assigned to projects in a way that their total number of projects does not exceed MaxProjectsPerConsultant\"], \"objective\": \"Minimize the total cost of assigning consultants to projects\", \"description\": \"Determine the assignment of consultants to projects that minimizes the total cost, given the fixed \\\\param{FixedCosts} for each project, \\\\param{AdditionalCosts} for assigning consultant i to project j, and the \\\\param{MaxProjectsPerConsultant} that can be handled by a single consultant.\", \"parameters\": [{\"definition\": \"Fixed cost for project j\", \"symbol\": \"FixedCosts\", \"value\": \"\", \"shape\": [\"J\"]}, {\"definition\": \"Additional cost for assigning consultant i to project j\", \"symbol\": \"AdditionalCosts\", \"value\": \"\", \"shape\": [\"I\", \"J\"]}, {\"definition\": \"Maximum number of projects that can be assigned to a consultant\", \"symbol\": \"MaxProjectsPerConsultant\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Wild Sports produces \\var{M} different products using \\var{N} different raw materials.\n- The company has \\var{available_{i}} of raw material \\var{i} available.\n- Product \\var{j} requires \\var{req_{i,j}} units of material \\var{i} per unit produced.\n- Product \\var{j} has a selling price of \\var{price_j} per unit.\n- Product \\var{j} has a production cost of \\var{cost_j} per unit produced.\n- Product \\var{j} has a forecasted maximum demand of \\var{demand_j} for the month.\n\nINPUT FORMAT: \n\n{\n    \"available\": [available_{i} for i in 1, ..., N],\n    \"requirements\": [[req_{i,j} for i in 1, ..., N] for j in 1, ..., M],\n    \"prices\": [price_{j} for j in 1, ..., M],\n    \"costs\": [cost_{j} for j in 1, ..., M],\n    \"demands\": [demand_{j} for j in 1, ..., M]\n}\n\nOBJECTIVE: How many of each product should the sports produce in order to maximize its profit for the month?\n\nOUTPUT INFO:\n\n- the amount of each product produced \\var{amount_{j}}.\n- \\var{total_profit} shows the total profit of the company for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"amount\": [amount_{j} for j in 1, ..., M],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A sports company produces multiple products using various raw materials. The amount of each raw material and the requirements for each product are known. Each product has an associated selling price, production cost, and market demand. The company aims to determine the number of each product to produce to maximize profit within the material limitations and market demand constraints.\", \"constraints\": [\"All products must be produced using available raw materials without exceeding their amounts\", \"Each product's production must meet its raw material requirement per unit\", \"Each product's production should not exceed its market demand\", \"Number of units produced of each product must be non-negative\"], \"objective\": \"Maximize the profit for the month by determining the number of each product to produce\", \"description\": \"How many of each product should the sports produce in order to maximize its profit for the month, given the \\\\param{N} different raw materials available, where each material i has an available amount of \\\\param{Available}, and each product j has a requirement of \\\\param{Requirements} units of material i, a selling price of \\\\param{Prices}, a production cost of \\\\param{Costs}, and a market demand of \\\\param{Demands}?\", \"parameters\": [{\"definition\": \"Number of different raw materials\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different products\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Amount of raw material i available\", \"symbol\": \"Available\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Amount of raw material i required to produce one unit of product j\", \"symbol\": \"Requirements\", \"value\": \"\", \"shape\": [\"N\", \"M\"]}, {\"definition\": \"Price at which product j can be sold\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Cost of producing one unit of product j\", \"symbol\": \"Costs\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Demand for product j\", \"symbol\": \"Demands\", \"value\": \"\", \"shape\": [\"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small computer manufacturing company forecasts the demand over the next \\var{n}-th month to be \\var{demand_{n}}.\n- These demands must be satisfied and can not be shorted.\n- In any month it can produce at most \\var{max_regular_amount} units, using regular production, at a cost of \\var{cost_regular} dollars per unit. \n- By using overtime, it can produce additional units at \\var{cost_overtime} dollars per unit. \n- The firm can store units from month to month at a cost of \\var{store_cost} dollars per unit per month. \n\nINPUT FORMAT:\n\n{\n\t\"demand\": [demand_{n} for n in 1,...,N],\n\t\"max_regular_amount\": max_regular_amount,\n\t\"cost_regular\": cost_regular,\n\t\"cost_overtime\": cost_overtime,\n\t\"store_cost\": store_cost\n}\n\n\nOBJECTIVE: Formulate the problem of determining the production schedule that minimizes the cost.\n\nOUTPUT INFO:\n\n- \\var{reg_quant} represents the quantity of products produced using regular production in each future month\n- \\var{over_quant} represents the quantity of products produced using overtime production in each future month\n\nOUTPUT FORMAT:\n\n{\n\t\"reg_quant\": [reg_quant_{n} for n in 1,...,N]\n\t\"over_quant\": [over_quant_{n} for n in 1,...,N]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem involves determining an optimal production schedule that minimizes the total cost, taking into account regular and overtime production along with storage.\", \"constraints\": [\"Demand for each product must be met\", \"Maximum production under regular conditions cannot exceed MaxRegularAmount\"], \"objective\": \"Minimize the total cost of production and storage\", \"description\": \"Formulate the problem of determining the production schedule that minimizes the cost, where the demand for each product is given by \\\\param{Demand}, the maximum production amount under regular conditions is \\\\param{MaxRegularAmount}, cost of regular production per unit is \\\\param{CostRegular}, cost of production under overtime conditions per unit is \\\\param{CostOvertime}, and the cost to store one unit of product is \\\\param{StoreCost}.\", \"parameters\": [{\"definition\": \"Demand of product n\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Maximum production amount under regular conditions\", \"symbol\": \"MaxRegularAmount\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of production under regular conditions per unit\", \"symbol\": \"CostRegular\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of production under overtime conditions per unit\", \"symbol\": \"CostOvertime\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost to store one unit of product\", \"symbol\": \"StoreCost\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Custom Tees is planning an online advertising campaign with \\var{A} different ad types across two web companies.\n- The company has set a goal of \\var{goal_young} thousand clicks from visitors aged 18-25 and \\var{goal_old} thousand clicks from visitors older than 25.\n- The company has set a goal of \\var{goal_unique_young} thousand unique clicks from visitors aged 18-25 and \\var{goal_unique_old} thousand unique clicks from visitors older than 25.\n- Ad type \\var{a} has an estimated percentage of \\var{young_click_{a}} clicks from the 18-25 age range.\n- Ad type \\var{a} has an estimated percentage of \\var{old_click_{a}} clicks from older visitors.\n- Ad type \\var{a} has a cost of \\var{cost_{a}} per 1000 clicks.\n- Ad type \\var{a} has a maximum allowable clicks of \\var{max_click_{a}} in thousands.\n- The estimated percentage of unique visitors for each ad type \\var{a} is \\var{unique_click_{a}}.\n\nINPUT FORMAT: \n\n{\n    \"goal_young\": goal_young,\n    \"goal_old\": goal_old,\n    \"goal_unique_young\": goal_unique_young,\n    \"goal_unique_old\": goal_unique_old,\n    \"young_clicks\": [young_click_{a} for a in 1,...,A],\n    \"old_clicks\": [old_click_{a} for a in 1,...,A],\n    \"costs\": [cost_{a} for a in 1,...,A],\n    \"max_clicks\": [max_click_{a} for a in 1,...,A],\n    \"unique_clicks\": [unique_click_{a} for a in 1,...,A]\n}\n\nOBJECTIVE: How many clicks from each ad type should Custom Tees purchase to minimize cost?\n\nOUTPUT INFO:\n\n- the number of clicks purchased for each ad type is \\var{clicks_{a}} in thousands.\n- \\var{total_cost} represents the total cost of the ad campaign.\n\nOUTPUT FORMAT:\n\n{\n    \"clicks\": [click_{a} for a in 1, ..., A],\n    \"total_cost\": total_cost\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Custom Tees aims to achieve specific click targets from young and old age groups through a selection of different ad types, each with its own characteristics and limitations.\", \"constraints\": [\"Total clicks from young individuals must meet or exceed GoalYoung\", \"Total clicks from old individuals must meet or exceed GoalOld\", \"Total unique clicks from young individuals must meet or exceed GoalUniqueYoung\", \"Total unique clicks from old individuals must meet or exceed GoalUniqueOld\", \"Number of clicks from each ad type must not exceed its MaxClicks\", \"Number of clicks for each ad type must be non-negative\"], \"objective\": \"Minimize the overall cost while meeting the young and old click goals\", \"description\": \"Custom Tees wants to optimize its ad clicks. Their plan is to meet certain goals for clicks from both young and old age groups. They have a set target of \\\\param{GoalYoung} clicks by young individuals, \\\\param{GoalOld} clicks by old individuals, \\\\param{GoalUniqueYoung} unique clicks by young, and \\\\param{GoalUniqueOld} unique clicks by old. They can gather clicks from a total of A different ad types. Each ad type provides a varying number of clicks by young individuals \\\\param{YoungClicks} and by old individuals \\\\param{OldClicks}. Each ad type also incurs different costs \\\\param{Costs}, has a maximum limit for the number of clicks \\\\param{MaxClicks}, and provides a number of unique clicks \\\\param{UniqueClicks}. Custom Tees wants to know how many clicks from each ad type should they purchase to minimize the overall cost while meeting their click goals.\", \"parameters\": [{\"definition\": \"Total goal for clicks by young individuals\", \"symbol\": \"GoalYoung\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total goal for clicks by old individuals\", \"symbol\": \"GoalOld\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total goal for unique clicks by young individuals\", \"symbol\": \"GoalUniqueYoung\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total goal for unique clicks by old individuals\", \"symbol\": \"GoalUniqueOld\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of clicks by young individuals for each ad type\", \"symbol\": \"YoungClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of clicks by old individuals for each ad type\", \"symbol\": \"OldClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Cost associated with each ad type\", \"symbol\": \"Costs\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Maximum number of clicks possible for each ad type\", \"symbol\": \"MaxClicks\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Number of unique clicks for each ad type\", \"symbol\": \"UniqueClicks\", \"value\": \"\", \"shape\": [\"A\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A company is undergoing a number of changes that will affect its manpower requirements in future years. \n- Owing to the installation of new machinery, fewer unskilled but more skilled and semi-skilled workers will be required. \n- In addition to this, a downturn in trade is expected in the next year, which will reduce the need for workers in all categories.\n- The estimated manpower requirements for manpower \\var{k} in year \\var{i} is \\var{requirement_{k, i}}.\n- The current strength of manpower \\var{k} is \\var{strength_{k}}.\n- The company wishes to decide its policy with regard to recruitment, retraining, redundancy and short-time working in the next years.\n- There is a natural wastage of labour. \n- A fairly large number of workers leave during their first year. After this, the rate is much smaller. \n- Taking this into account, the wastage rates of \\var{k} manpower with less than one year's service is \\var{lessonewaste_{k}}.\n- The wastage rates of \\var{k} manpower with more than one year's service is \\var{moreonewaste_{k}}.\n- There has been no recent recruitment and all workers in the current labour force have been employed for more than one year.\n- It is possible to recruit a limited number of workers from outside. \n- In any one year, the numbers that can be recruited in manpower \\var{k} is \\var{recruit_{k}}.\n- The redundancy payment to manpower \\var{k} is \\var{costredundancy_{k}}.\n- It is possible to employ up to \\var{num_overman} more workers over the whole company than are needed, but the extra costs per employee per year is \\var{costoverman_{k}} for manpower \\var{k}.\n- Up to \\var{num_shortwork} workers in each category of skill can be put on short-time working. \n- The cost of this (per employee per year) is \\var{costshort_{k}} for manpower \\var{k}.\n- An employee on short-time working meets the production requirements of half a full-time employee.\n\n\nINPUT FORMAT:\n\n{\n    \"requirement\": [[requirement_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"strength\": [strength_{k} for k in 1,...,K],\n    \"lessonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"moreonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"recruit\": [recruit_{k} for k in 1,...,K],\n    \"costredundancy\": [costredundancy_{k} for k in 1,...,K],\n    \"num_overman\": num_overman,\n    \"costoverman\": [costoverman_{k} for k in 1,...,K],\n    \"num_shortwork\": num_shortwork\n    \"costshort\": [costshort_{k} for k in 1,...,K],\n}\n\n\nOBJECTIVE: The company’s declared objective is to minimize costs. How should they operate in order to do this?\n\nOUTPUT INFO:\n\n- \\var{recruit} represents the number of each recruit manpower to employ each year\n- \\var{overmanning} represents the number of each overmanning manpower to employ each year\n- \\var{short} represents the number of each short-time manpower to employ each year\n\nOUTPUT FORMAT:\n\n{\n    \"recruit\": [[recruit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"overmanning\": [[overmanning_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"short\": [[short_{k, i} for i in 1,...,I] for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company aims to minimize costs while managing different categories of requirements, each with varying strengths, costs associated with waste, and number of recruits.\", \"constraints\": [\"The company can have up to NumOverman over-managed categories, with each incurring a cost of CostOverman\", \"The company can have up to NumShortwork short-work categories, with each incurring a cost of CostShort\", \"Over-managed and short-work categories must be within their respective allowable limits\"], \"objective\": \"Minimize the overall costs of operations under the given conditions\", \"description\": \"The company\\u2019s declared objective is to minimize costs. It has \\\\param{K} categories of requirements, with each category consisting of \\\\param{I} different requirements. The strength of each requirement category is denoted by \\\\param{Strength}, whereas the cost reductions per unit less waste in each category and the additional costs per unit more waste in each category are represented by \\\\param{LessOneWaste} and \\\\param{MoreOneWaste}, respectively. The number of recruits in each category is given by \\\\param{Recruit}, and the cost of redundancy per recruit in each category is \\\\param{CostRedundancy}. The company can allow \\\\param{NumOverman} over-managed categories, with each over-managed category incurring a cost of \\\\param{CostOverman}. Similarly, \\\\param{NumShortwork} short-work categories are permissible, each one resulting in a cost of \\\\param{CostShort}. How should they operate in order to minimize these costs?\", \"parameters\": [{\"definition\": \"Number of requirements categories\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different requirements\", \"symbol\": \"I\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Strength of each requirement category\", \"symbol\": \"Strength\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Cost reduction per unit less waste in each category\", \"symbol\": \"LessOneWaste\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Additional cost per unit more waste in each category\", \"symbol\": \"MoreOneWaste\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of recruits in each category\", \"symbol\": \"Recruit\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Cost of redundancy per recruit in each category\", \"symbol\": \"CostRedundancy\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of over-managed categories allowed\", \"symbol\": \"NumOverman\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of over-managing in each category\", \"symbol\": \"CostOverman\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of short-work categories allowed\", \"symbol\": \"NumShortwork\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of short-work in each category\", \"symbol\": \"CostShort\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A company is undergoing a number of changes that will affect its manpower requirements in future years. \n- Owing to the installation of new machinery, fewer unskilled but more skilled and semi-skilled workers will be required. \n- In addition to this, a downturn in trade is expected in the next year, which will reduce the need for workers in all categories.\n- The estimated manpower requirements for manpower \\var{k} in year \\var{i} is \\var{requirement_{k, i}}.\n- The current number of manpower \\var{k} is \\var{strength_{k}}.\n- The company wishes to decide its policy with regard to recruitment, retraining, redundancy and short-time working in the next years.\n- There is a natural wastage of labour. \n- A fairly large number of workers leave during their first year. After this, the rate of leaving is much smaller. \n- Taking this into account, the wastage rates of manpower \\var{k} with less than one year's service is \\var{lessonewaste_{k}}.\n- The wastage rates of \\var{k} manpower with more than one year's service is \\var{moreonewaste_{k}}.\n- There has been no recent recruitment and all the workers in the current labour force have been employed for more than one year.\n- It is possible to recruit a limited number of workers from outside. \n- In any one year, the maximum number that can be recruited in manpower \\var{k} is \\var{recruit_{k}}.\n- The redundancy payment to manpower \\var{k} is \\var{costredundancy_{k}}.\n- It is possible to employ up to \\var{num_overman} more workers over the whole company than are needed, but the extra costs per employee per year is \\var{costoverman_{k}} for manpower \\var{k}.\n- Up to \\var{num_shortwork} workers in each category of skill can be put on short-time working. \n- The cost of this (per employee per year) is \\var{costshort_{k}} for manpower \\var{k}.\n- An employee on short-time working meets the production requirements of half a full-time employee.\n\n\nINPUT FORMAT:\n\n{\n    \"requirement\": [[requirement_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"strength\": [strength_{k} for k in 1,...,K],\n    \"lessonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"moreonewaste\": [lessonewaste_{k} for k in 1,...,K],\n    \"recruit\": [recruit_{k} for k in 1,...,K],\n    \"costredundancy\": [costredundancy_{k} for k in 1,...,K],\n    \"num_overman\": num_overman,\n    \"costoverman\": [costoverman_{k} for k in 1,...,K],\n    \"num_shortwork\": num_shortwork\n    \"costshort\": [costshort_{k} for k in 1,...,K],\n}\n\n\nOBJECTIVE: The company’s declared objective is to minimize redundancy. How should they operate in order to do this?\n\nOUTPUT INFO:\n\n- \\var{recruit} represents the number of each recruit manpower to employ each year\n- \\var{overmanning} represents the number of each overmanning manpower to employ each year\n- \\var{short} represents the number of each short-time manpower to employ each year\n\nOUTPUT FORMAT:\n\n{\n    \"recruit\": [[recruit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"overmanning\": [[overmanning_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"short\": [[short_{k, i} for i in 1,...,I] for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company is looking to minimize redundancy across various resources with specific strength requirements and differing costs associated with wastage, redundancy, overmanning, and short working.\", \"constraints\": [\"Recruit, NumOverman, and NumShortwork must be non-negative for each type of resource\", \"Amount of each resource used must be at least equal to I - LessOneWaste if there is less wastage\", \"Amount of each resource used must not exceed I + MoreOneWaste if there is more wastage\"], \"objective\": \"Minimize the total cost of redundancy, overmanning, and short working for the company\", \"description\": \"The company\\u2019s declared objective is to minimize redundancy. Requirement are given as \\\\param{K} different resources each having \\\\param{I} specific requirements, where \\\\param{Strength} is the strength of each type of resource, \\\\param{LessOneWaste} is the value when wastage of resources is less than optimal, \\\\param{MoreOneWaste} is the value when wastage of resources is more than optimal. \\\\param{Recruit} is the number of recruited resources of each type, \\\\param{CostRedundancy} is the cost of redundancy for each type of resource, \\\\param{NumOverman} signifies the number of overmanned positions, \\\\param{CostOverman} is the cost of overmanning for each type of resource, and \\\\param{NumShortwork} represents the number of shortworked positions with \\\\param{CostShort} as the cost of short working for each type of resource. How should they operate in order to do this?\", \"parameters\": [{\"definition\": \"Total number of different types of resources\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of different requirements for each type of resource\", \"symbol\": \"I\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Strength of each type of resource\", \"symbol\": \"Strength\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Value when wastage of resources is less than optimal\", \"symbol\": \"LessOneWaste\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Value when wastage of resources is more than optimal\", \"symbol\": \"MoreOneWaste\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of recruited resources of each type\", \"symbol\": \"Recruit\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Cost of redundancy for each type of resource\", \"symbol\": \"CostRedundancy\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of overmanned positions\", \"symbol\": \"NumOverman\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of overmanning for each type of resource\", \"symbol\": \"CostOverman\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Number of shortworked positions\", \"symbol\": \"NumShortwork\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost of short working for each type of resource\", \"symbol\": \"CostShort\", \"value\": \"\", \"shape\": [\"K\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\n\nPROBLEM INFO: \n- A hospital wants to make a weekly night shift (12pm-8am) schedule for its nurses. \n- The demand for nurses for the night shift on day \\var{j} = 1,...,7 is an integer \\var{d_j}. \n- Every nurse works \\var{period} days in a row on the night shift, followed by (7 - \\var{period}) days off.\n\n\nINPUT FORMAT: \n\n{\n    \"period\": period,\n    \"demand\": [d_j for j in 1, ...,7]\n}\n\nOBJECTIVE: The goal is to find the minimal number of nurses the hospital needs to hire. \n\nOUTPUT INFO: \n\n- for each day \\var{j} = 1,...,7, \\var{start_j} which shows the number of nurses that start their period on day \\var{j}.\n- the total number of nurses hired.\n\nOUTPUT FORMAT:\n\n{\n    \"start\": [start_j for j in 1, ...,7],\n    \"total\": total\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A hospital is trying to determine the minimal number of nurses to hire over a planning period to meet the daily demand for nursing staff.\", \"constraints\": [\"Number of nurses is non-negative\", \"The number of nurses hired must meet or exceed the demand for each day of the period\"], \"objective\": \"Minimize the number of nurses that the hospital needs to hire for the planning period\", \"description\": \"The goal is to find the minimal number of nurses the hospital needs to hire for a planning period of \\\\param{Period}. The hospital has a known demand for nurses across a week, specified by the array \\\\param{Demand}, where each element corresponds to the demand for a particular day in the period.\", \"parameters\": [{\"definition\": \"Number of days\", \"symbol\": \"T\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The planning period for nurse staffing\", \"symbol\": \"Period\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Array of demands for nurses for days\", \"symbol\": \"Demand\", \"value\": \"\", \"shape\": [\"T\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- A company produces and sells \\var{P} different products. \n- The demand for each product is unlimited, but the company is constrained by cash availability and machine capacity.\n- Each unit of the \\var{i}-th product requires \\var{hour_i} machine hours.\n- There are \\var{availableHours} machine hours available in the current production period.\n- The production costs are \\var{cost_i} per unit of the \\var{i}-th product.\n- The selling prices of the \\var{i}-th product is \\var{price_i} per unit.\n- The available cash is \\var{cash}.\n- Furthermore, \\var{investRate_i} of the sales revenues from the \\var{i}-th product will be made available to finance operations during the current period.\n- \\var{investPercentage_i} is a number between 0 and 1\n- The company could increase its available machine hours by \\var{upgradeHours}, after spending \\var{upgradeCost} for certain repairs. \n- The net income from each product is the revenue we get from selling it minus the production cost and the investment cost.\n\nINPUT FORMAT:\n\n{\n    \"cash\": cash,\n    \"hour\": [hour_i for i in 1, ..., P],\n    \"cost\": [cost_i for i in 1, ..., P],\n    \"price\": [price_i for i in 1, ..., P],\n    \"investPercentage\": [investPercentage_i for i in 1, ..., P],\n    \"upgradeHours\": upgradeHours,   \n    \"upgradeCost\": upgradeCost,\n    \"availableHours\": availableHours,\n}\n\nOBJECTIVE: We are aiming at maximizing total net income subject to the cash availability and machine capacity limitations\n\nOUTPUT INFO:\n\n- \\var{net_income} shows the net income of the company\n- \\var{production_i} shows the production quantity of the \\var{i}-th product\n- \\var{upgrade} is a boolean variable that shows whether the company should upgrade its machine capacity or not\n\nOUTPUT FORMAT:\n\n{\n    \"net_income\": net_income,\n    \"production\": [production_i for i in 1, ..., P],\n    \"upgrade\": true/false,\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The goal is to maximize total net income from producing various products with constraints on initial cash, machine hours, and production costs. Part of the income is to be reinvested, and there is an option to upgrade machinery.\", \"constraints\": [\"Initial cash available does not exceed Cash\", \"Total production hours for all products do not exceed AvailableHours\", \"Total cost to produce all products does not exceed Cash\", \"Cost to upgrade machinery does not exceed Cash\", \"Production hours for upgrading machinery do not exceed AvailableHours\"], \"objective\": \"Maximize total net income considering production, selling price, cost, and reinvestment\", \"description\": \"We are aiming at maximizing total net income subject to the \\\\param{Cash} availability and machine capacity limitations. The problem parameters include: the initial \\\\param{Cash} available, the \\\\param{Hour}(s) required to produce each of the \\\\param{P} products, the \\\\param{Cost} to produce each of the products, the \\\\param{Price} at which each product can be sold, the \\\\param{InvestPercentage} of income from each product to be reinvested, the \\\\param{UpgradeHours} required for upgrading the machinery, the \\\\param{UpgradeCost} associated with upgrading, and the total available \\\\param{AvailableHours} for machine operation.\", \"parameters\": [{\"definition\": \"Number of products\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Initial cash available for investment\", \"symbol\": \"Cash\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Hours required to produce one unit of product i\", \"symbol\": \"Hour\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Cost to produce one unit of product i\", \"symbol\": \"Cost\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Selling price for one unit of product i\", \"symbol\": \"Price\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Percentage of income to reinvest for product i\", \"symbol\": \"InvestPercentage\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Hours required for upgrading the machinery\", \"symbol\": \"UpgradeHours\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Cost associated with upgrading the machinery\", \"symbol\": \"UpgradeCost\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total available machine hours\", \"symbol\": \"AvailableHours\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n- A company must deliver \\var{deliver_i} units of its product at the end of the \\var{i}_th month.\n- Material produced during a month can be delivered either at the end of the same month or can be stored as inventory and delivered at the end of a subsequent month.\n- There is a storage cost of \\var{storage_cost} dollars per month for each unit of product held in inventory. \n- The year begins with zero inventory. \n- If the company produces \\var{x_i} units in month \\var{i} and \\var{x_{i+1}} units in month \\var{i}+1, it incurs a cost of \\var{switch_cost} |\\var{x_{i+1}} - \\var{x_i}|  dollars, reflecting the cost of switching to a new production level. \n- Assume that inventory left at the end of the year has no value and does not incur any storage cost.\n- The company wants to minimize the total cost of the production and inventory schedule over the next \\var{T} months.\n\nINPUT FORMAT: \n\n{\n    \"deliver\": [deliver_i for i in 1, ..., T],\n    \"storage_cost\": storage_cost,\n    \"switch_cost\": switch_cost,\n}\n\nOBJECTIVE: Minimize the total cost of the production and inventory schedule over the whole period.\n\nOUTPUT INFO:\n\n- \\var{x_i} is the number of units produced in month \\var{i}.\n\nOUTPUT FORMAT:\n\n{\n    \"x\": [x_i for i in 1, ..., T],\n    \"cost\": cost,\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A production and inventory schedule over a set number of periods requires minimization of the total cost, which is a combination of production costs, storage costs for inventory, and switching costs for changing production.\", \"constraints\": [\"The production amount in each period is non-negative\", \"The inventory level in each period is non-negative\", \"The production schedule must meet the delivery requirement Deliver in each period\", \"The switch cost is incurred when changing production between periods\"], \"objective\": \"Minimize the total cost of production and inventory over T periods\", \"description\": \"Minimize the total cost of the production and inventory schedule over \\\\param{T} periods, given \\\\param{Deliver} for each period, a \\\\param{StorageCost} for holding inventory, and a \\\\param{SwitchCost} for changing production between periods.\", \"parameters\": [{\"definition\": \"Demand for the product in each period i\", \"symbol\": \"Deliver\", \"value\": \"\", \"shape\": [\"T\"]}, {\"definition\": \"Cost to hold one unit of product in storage for one period\", \"symbol\": \"StorageCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Cost to switch the production from one period to another\", \"symbol\": \"SwitchCost\", \"value\": 0.0, \"shape\": []}, {\"definition\": \"Total number of periods\", \"symbol\": \"T\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A company produces \\var{S} different types of steel using \\var{A} different alloys.\n- The company has \\var{available_{a}} tons of alloy \\var{a} available.\n- Steel \\var{s} requires a certain percentage of carbon \\var{carbon_min_{s}}.\n- Steel \\var{s} has a maximum allowable percentage for nickel \\var{nickel_max_{s}}.\n- Alloy \\var{a} contains \\var{carbon_{a}} percent of carbon and \\var{nickel_{a}} percent of nickel.\n- Alloy \\var{a} has a purchase price of \\var{alloy_price_{a}} per ton.\n- Steel \\var{s} has a selling price of \\var{steel_price_{s}} per ton.\n- All steel must have at most 40% of alloy 1.\n\nINPUT FORMAT: \n\n{\n\"available\": [available_{a} for a in 1, ..., A],\n\"carbon\": [carbon_{a} for a in 1, ..., A],\n\"nickel\": [nickel_{a} for a in 1, ..., A],\n\"alloy_prices\": [alloy_price_{a} for a in 1, ..., A],\n\"steel_prices\": [steel_price_{s} for s in 1, ..., S],\n\"carbon_min\": [carbon_min_{s} for s in 1, ..., S],\n\"nickel_max\": [nickel_min_{s} for s in 1, ..., S]\n}\n\nOBJECTIVE: How much of each alloy should the company use in each type of steel, and how much of each steel type should be produced to maximize profit?\n\nOUTPUT INFO:\n\n- The amount of each alloy used in each type of steel \\var{alloy_amount_{a,s}}.\n- \\var{total_steel_{s}} shows the total amount of steel type \\var{s} produced.\n- \\var{total_profit} represents the total profit.\n\nOUTPUT FORMAT:\n\n{\n    \"alloy_use\": [[alloy_amount_{a,s} for a in 1, ..., A] for s in 1, ..., S],\n    \"total_steel\": [total_steel_{s} for s in 1, ..., S],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company is looking to determine the optimal combination of different alloys to use in the production of various steel types to maximize profit. There are constraints related to the availability, composition, and cost of the alloys, as well as the composition and selling price of the steel types produced.\", \"constraints\": [\"For each alloy a, the amount used is non-negative and cannot exceed AvailableAlloy[a]\", \"The carbon content in each steel type s must be at least CarbonMin[s]\", \"The nickel content in each steel type s must not exceed NickelMax[s]\", \"The overall materials used cannot exceed the total available amount for each alloy\", \"For each steel type s, the amount produced is non-negative\"], \"objective\": \"Maximize the profit from producing the different steel types, considering the cost of the alloys and the revenue from the steel\", \"description\": \"How much of each alloy should the company use in each type of steel, and how much of each steel type should be produced to maximize profit? The company has \\\\param{A} different alloys and \\\\param{S} different steel types. For each alloy \\\\param{a} in 1, ..., \\\\param{A}, there is an available amount of \\\\param{AvailableAlloy}, a carbon content of \\\\param{CarbonContent}, a nickel content of \\\\param{NickelContent}, and an alloy price of \\\\param{AlloyPrice}. For each steel type \\\\param{s} in 1, ..., \\\\param{S}, there is a steel price of \\\\param{SteelPrice}, a minimum required carbon content of \\\\param{CarbonMin}, and a maximum allowed nickel content of \\\\param{NickelMax}.\", \"parameters\": [{\"definition\": \"Total number of different alloys\", \"symbol\": \"A\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Total number of different steel types\", \"symbol\": \"S\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Available amount of alloy a\", \"symbol\": \"AvailableAlloy\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Carbon content of alloy a\", \"symbol\": \"CarbonContent\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Nickel content of alloy a\", \"symbol\": \"NickelContent\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Price of alloy a\", \"symbol\": \"AlloyPrice\", \"value\": \"\", \"shape\": [\"A\"]}, {\"definition\": \"Price of steel type s\", \"symbol\": \"SteelPrice\", \"value\": \"\", \"shape\": [\"S\"]}, {\"definition\": \"Minimum required carbon content for steel type s\", \"symbol\": \"CarbonMin\", \"value\": \"\", \"shape\": [\"S\"]}, {\"definition\": \"Maximum allowed nickel content for steel type s\", \"symbol\": \"NickelMax\", \"value\": \"\", \"shape\": [\"S\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\nPROBLEM INFO:\n\n- A small firm specializes in making some types of spare automobile parts. \n- Each part is has to go through several shops \n- The required worker-hours for part \\var{k} in shop \\var{s} is \\var{time_{k, s}}.\n- The profit of part \\var{k} is \\var{profit_{k}}.\n- The capacity of shop \\var{s} is \\var{capacity_{s}} working hours.\n\nINPUT FORMAT:\n\n{\n\t\"time\": [[time_{k, s} for s in 1,...,S] for k in 1,...,K],\n\t\"profit\": [profit_{k} for k in 1,...,K],\n\t\"capacity\": [capacity_{s} for s in 1,...,S]\n}\n\n\nOBJECTIVE: Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize profit.\n\nOUTPUT INFO:\n\n- \\var{quantity} represents the amount of each spare part to be made\n\nOUTPUT FORMAT:\n\n{\n\t\"quantity\": [quantity_{k} for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to determine the optimal quantities of K different spare parts to produce in a month to maximize profit using S machines, keeping in mind the time constraints and capacities of each machine.\", \"constraints\": [\"Quantities of each spare part must be non-negative\", \"Time to produce each spare part must not exceed the available machine time\", \"Total time used on each machine s must not exceed its capacity Capacity\"], \"objective\": \"Maximize the total profit from producing the spare parts\", \"description\": \"Formulate the problem of determining the quantities of each spare part to be made during the month so as to maximize profit. The number of different spare parts is \\\\param{K}. The number of machines capable of making the spare parts is \\\\param{S}. The time taken to make spare part \\\\param{k} on machine \\\\param{s} is given by \\\\param{Time}. The profit obtained from making spare part \\\\param{k} is \\\\param{Profit}. Each machine \\\\param{s} has a capacity of \\\\param{Capacity} for the spare parts.\", \"parameters\": [{\"definition\": \"Number of different spare parts\", \"symbol\": \"K\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of machines capable of making the spare parts\", \"symbol\": \"S\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time taken to make spare part k on machine s\", \"symbol\": \"Time\", \"value\": \"\", \"shape\": [\"K\", \"S\"]}, {\"definition\": \"Profit obtained from making spare part k\", \"symbol\": \"Profit\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Capacity of machine s for the spare parts\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"S\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- A division of an auto parts manufacturer produces \\var{P} different parts using \\var{M} different machines.\n- Batch of 100 part \\var{p} requires \\var{time_{m,p}} hours on machine \\var{m}.\n- The division incurs a charge of \\var{cost_{m}} per hour for using machine \\var{m}.\n- Machine \\var{m} has an availability of up to \\var{available_{m}} hours per month.\n- The division sells part \\var{p} in batches of 100 at price of \\var{price_{p}} per batch.\n- The division must produce at least \\var{min_batches_{p}} batches of part \\var{p} each month to fulfill a contract.\n\nINPUT FORMAT: \n\n{\n    \"time_required\": [[time_{m,p} for p in 1, ..., P] for m in 1, ..., M],\n    \"machine_costs\": [cost_{m} for m in 1, ..., M],\n    \"availability\": [available_{m} for m in 1, ..., M],\n    \"prices\": [price_{p} for p in 1, ..., P],\n    \"min_batches\": [min_batches_{p} for p in 1, ..., P]\n}\n\nOBJECTIVE: How many batches of each part should the manufacturer produce each month to maximize profit?\n\nOUTPUT INFO:\n\n- the number of batches of each part produced \\var{batches_{p}}.\n- \\var{total_profit} represents the total profit obtained for the month.\n\nOUTPUT FORMAT:\n\n{\n    \"batches\": [batches_{p} for p in 1, ..., P],\n    \"total_profit\": total_profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A manufacturer needs to determine the optimal monthly production quantities for different types of parts, taking into account machine time constraints, machine costs, sales prices, and minimum production requirements.\", \"constraints\": [\"Number of batches for each part is non-negative\", \"Total time used on each machine does not exceed its Availability\", \"At least MinBatches of each part must be produced\"], \"objective\": \"Maximize the profit, which is the total sales minus the costs of using the machines\", \"description\": \"How many batches of each part should the manufacturer produce each month to maximize profit? The number of different parts is \\\\param{P}, the number of machines is \\\\param{M}. There is a \\\\param{TimeRequired} matrix detailing the time required to produce one batch of each part on each machine. Each machine has an associated cost given by \\\\param{MachineCosts} and a monthly availability given by \\\\param{Availability}. Each part can be sold for \\\\param{Prices} and there is a minimum production requirement for each part detailed by \\\\param{MinBatches}.\", \"parameters\": [{\"definition\": \"Number of parts\", \"symbol\": \"P\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Time required to produce one batch of part p on machine m\", \"symbol\": \"TimeRequired\", \"value\": \"\", \"shape\": [\"M\", \"P\"]}, {\"definition\": \"Cost associated with using machine m\", \"symbol\": \"MachineCosts\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Availability of machine m per month\", \"symbol\": \"Availability\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Selling price of one batch of part p\", \"symbol\": \"Prices\", \"value\": \"\", \"shape\": [\"P\"]}, {\"definition\": \"Minimum number of batches of part p to be produced\", \"symbol\": \"MinBatches\", \"value\": \"\", \"shape\": [\"P\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\n\nPROBLEM INFO:\n\n- Digital Equipment Corporation (DEC) has introduced new families of \\var{N} computer systems with different memory, disk storage, and expansion capabilities.\n- Each system \\var{i} is either a general-purpose (GP) system or a workstation (WS) system.\n- Each system \\var{i} can have an integer number of disk drives, and on average \\var{disk_i} units of disk drive per system are requested by customers for system \\var{i}.\n- System \\var{i} uses \\var{mem_i} units of 256K memory boards per system on average.\n- System \\var{i} has a price of \\var{price_i} dollars.\n- The in-house supplier of CPUs for DEC could provide at most \\var{max_cpu} units, due to debugging problems.\n- The supply of disk drives is uncertain and is estimated by the manufacturer to be in the range of \\var{min_disk} to \\var{max_disk} units.\n- the supply of 256K memory boards is also limited in the range of \\var{min_mem} to \\var{max_mem} units.\n- Maximum demand for system \\var{i} in the next quarter is estimated to be \\var{demand_i} units.\n- Maximum demand for the whole GP family in the next quarter is estimated to be \\var{demand_GP} units.\n- Maximum demand for the whole WS family in the next quarter is estimated to be \\var{demand_WS} units.\n- Included in the projections, there are \\var{preorder_i} orders for system \\var{i} that have already been received and have to be fulfilled in the next quarter.\n- To address the shortage of 256K memory boards, DEC has access to \\var{alt_mem} units of an alternative memory board that can only be used in certain systems.\n- you can assume the number of systems produced is a floating point number to make the problem easier to solve.\n\nINPUT FORMAT:\n\n{\n    \"is_workstation\": [true/false for i in 1, ..., N],\n    \"price\": [price_i for i in 1, ..., N],\n    \"disk_drives\": [disk_i for i in 1, ..., N],\n    \"256K_boards\": [mem_i for i in 1, ..., N],\n    \"max_cpu\": max_cpu,\n    \"min_disk\": min_disk,\n    \"max_disk\": max_disk,\n    \"min_mem\": min_mem,\n    \"max_mem\": max_mem,\n    \"demand\": [demand_i for i in 1, ..., N],\n    \"demand_GP\": demand_GP,\n    \"demand_WS\": demand_WS,\n    \"preorder\": [preorder_i for i in 1, ..., N],\n    \"alt_mem\": alt_mem,\n    \"alt_compatible\": [true/false for i in 1, ..., N]\n}\n\n\n\nOBJECTIVE: How many of which system should DEC produce and using what memories and disks to maximize the profit for the next quarter?\n\n\nOUTPUT INFO:\n- A json file with \"system_output\" and \"profit\" as keys.\n- \"system_output\" contains a list of different types of systems produced \n- for each system, \\var{num_produced} is the number of systems produced, \\var{total_256K_boards_used} is the number of 256K memory boards used, \\var{total_alt_boards_used} is the number of alternative memory boards used, and \\var{total_disk_drives_used} is the number of disk drives used in that system.\n- \"profit\" is the total profit for the next quarter.\n\nOUTPUT FORMAT:\n\n{\n    \"system_output\": [\n        {\n            \"num_produced\": x_i,\n            \"total_256K_boards_used\": mem_used_i,\n            \"total_alt_boards_used\": alt_used_i,\n            \"total_disk_drives_used\": disk_used_i\n        }\n        for i in 1, ..., T\n    ],\n    \"profit\": profit\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"DEC is planning to maximize profit for the next quarter by producing an optimal mix of systems. The production will consider the type of systems (workstations or general purpose), various components such as memories and disks, and other constraints such as demand and available resources.\", \"constraints\": [\"The number of systems produced is non-negative and integer\", \"Only workstations or general-purpose systems can be produced for each system according to IsWorkstation\", \"The production must not exceed the MaxCpu available CPUs\", \"The total number of disk drives across all systems must be at least MinDisk and at most MaxDisk\", \"The total number of 256K memory boards across all systems must be at least MinMemory and at most MaxMemory\", \"The production of each system must not exceed its corresponding Demand\", \"The total production of general purpose systems must not exceed DemandGP\", \"The total production of workstations must not exceed DemandWS\", \"Preorder systems must be fulfilled as specified by Preorder\", \"Each system must be configured with compatible alternative memory configurations based on AltCompatible\", \"The number of system configurations using alternative memory must not exceed AltMemory\"], \"objective\": \"Maximize the profit, which is calculated as the sum of the product of the number of each system produced and its corresponding Price\", \"description\": \"How many of which system should DEC produce and using what memories and disks to maximize the profit for the next quarter? The parameters involved are the number of systems \\\\param{N}, whether a system is a workstation or not for each system \\\\param{IsWorkstation}, the price for each system \\\\param{Price}, the number of disk drives for each system \\\\param{DiskDrives}, the number of 256K memory boards for each system \\\\param{MemoryBoards}, the maximum number of CPUs available \\\\param{MaxCpu}, the minimum and maximum total disk drives in the system \\\\param{MinDisk} and \\\\param{MaxDisk} respectively, the minimum and maximum total memory boards \\\\param{MinMemory} and \\\\param{MaxMemory} respectively, the demand for each system \\\\param{Demand}, the demand for general purpose systems \\\\param{DemandGP} and for workstations \\\\param{DemandWS}, the number of preordered systems \\\\param{Preorder}, the number of alternative memory configurations possible \\\\param{AltMemory}, and the compatibility of alternative memory with each system \\\\param{AltCompatible}.\", \"parameters\": [{\"definition\": \"Number of systems\", \"symbol\": \"N\", \"value\": 0, \"shape\": []}, {\"definition\": \"Whether system i is a workstation\", \"symbol\": \"IsWorkstation\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Price of system i\", \"symbol\": \"Price\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Number of disk drives in system i\", \"symbol\": \"DiskDrives\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Number of 256K memory boards in system i\", \"symbol\": \"MemoryBoards\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Maximum number of CPUs available\", \"symbol\": \"MaxCpu\", \"value\": 0, \"shape\": []}, {\"definition\": \"Minimum total disk drives\", \"symbol\": \"MinDisk\", \"value\": 0, \"shape\": []}, {\"definition\": \"Maximum total disk drives\", \"symbol\": \"MaxDisk\", \"value\": 0, \"shape\": []}, {\"definition\": \"Minimum total memory boards\", \"symbol\": \"MinMemory\", \"value\": 0, \"shape\": []}, {\"definition\": \"Maximum total memory boards\", \"symbol\": \"MaxMemory\", \"value\": 0, \"shape\": []}, {\"definition\": \"Demand of system i\", \"symbol\": \"Demand\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Demand for General Purpose systems\", \"symbol\": \"DemandGP\", \"value\": 0, \"shape\": []}, {\"definition\": \"Demand for Workstations\", \"symbol\": \"DemandWS\", \"value\": 0, \"shape\": []}, {\"definition\": \"Number of preordered system i\", \"symbol\": \"Preorder\", \"value\": 0, \"shape\": [\"N\"]}, {\"definition\": \"Number of alternative memory configurations possible\", \"symbol\": \"AltMemory\", \"value\": 0, \"shape\": []}, {\"definition\": \"Whether the alternative memory is compatible with system i\", \"symbol\": \"AltCompatible\", \"value\": 0, \"shape\": [\"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n\n- Suppose that there are \\var{N} available currencies, and assume that one unit of currency \\var{i} can be exchanged for \\var{rate_{i,j}} units of currency \\var{j} (Naturally, we assume that \\var{rate_{i,j}} > 0).\n- There are also certain regulations that impose a limit \\var{limit_i} on the total amount of currency \\var{i} that can be exchanged (whether to other currencies or from other currencies) on any given day.\n- Suppose that we start the day with \\var{start_i} units of currency \\var{i}\n- Provide a linear programming formulation of this problem. Assume that for any sequence \\var{i_1}, … ,\\var{i_k} of currencies, we have \\var{rate_{i_1,i_2}}, \\var{rate_{i_2,i_3}}, ..., \\var{rate_{i_{k-1}, i_{k}}, \\var{rate_{i_k, i_1}} <= 1, which means that wealth cannot be multiplied by going through a cycle of currencies.\n\nINPUT FORMAT: \n\n{\n    \"start\": [start_i for i in 1, ..., N],\n    \"limit\": [limit_i for i in 1, ..., N],\n    \"rate\": [[rate_{i,j} for j in 1, ..., N] for i in 1, ..., N],\n}\n\nOBJECTIVE: The objective is to maximize the number of units of currency \\var{N} that we end up with at the end of the day, through a sequence of currency transactions.\n\nOUTPUT INFO: \n\n- The output json file contains a list of transactions, where each transaction is a json object with the following fields:\n    - from: the currency that we are exchanging from\n    - to: the currency that we are exchanging to\n    - amount: the amount of currency that we are exchanging\n- The output json file also contains the final amount of currency \\var{N} that we end up with at the end of the day.\n\nOUTPUT FORMAT: \n\n{\n    \"transactions\": [\n        {\n            \"from\": i,\n            \"to\": j,\n            \"amount\": amount_{i,j}\n        }\n    ],\n    \"final_amount_of_currency_N\": final_amount_of_currency_N\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The goal is to maximize the total units of currency through transactions with starting quantities, transaction limits for each currency, and defined exchange rates.\", \"constraints\": [\"Number of transactions for each currency is non-negative\", \"Number of transactions for each currency does not exceed the specified Limit\"], \"objective\": \"Maximize the final total number of units of currency N\", \"description\": \"The objective is to maximize the number of units of currency \\\\param{N} that we end up with at the end of the day, through a sequence of currency transactions. We start with a certain amount \\\\param{Start} for each currency, there is a limit \\\\param{Limit} to the number of transactions we can perform for each currency, and the exchange rates are given by \\\\param{Rate}.\", \"parameters\": [{\"definition\": \"Number of different currencies\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Initial amount of currency i\", \"symbol\": \"Start\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Limit for the number of transactions for currency i\", \"symbol\": \"Limit\", \"value\": \"\", \"shape\": [\"N\"]}, {\"definition\": \"Exchange rate from currency i to currency j\", \"symbol\": \"Rate\", \"value\": \"\", \"shape\": [\"N\", \"N\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO:\n\n- Consider a communication network consisting of \\var{n} nodes.\n- Nodes are con­nected by communication links.\n- A link allowing one-way transmission from node \\var{i} to node \\var{j} is described by an ordered pair (\\var{i},\\var{j}). \n- Let \\var{A} be the set of all links. \n- We assume that each link (\\var{i},\\var{j}) \\in \\var{A} can carry up to \\var{U_{i,j}} bits per second. \n- There is a positive cost \\var{C_{i,j}} per bit transmitted along that link. \n- Each node \\var{k} generates data, at the rate of \\var{B_{k,l}} bits per second, that have to be transmitted to node \\var{l}, either through a direct link (\\var{k}, \\var{l}) or by tracing a sequence of links. \n- We allow the data with the same origin and destination to be split and be transmitted along different paths.\n\nINPUT FORMAT:\n\n{\n    \"links\": [\n       {\n        \"start\": i,\n        \"end\": j,\n        \"U\": U_{i,j},\n        \"C\": C_{i,j},\n       }\n    ],\n    \"data\": [\n        {\n            \"source\": k,\n            \"destination\": l,\n            \"rate\": B_{k,l}\n        }\n    ]\n}\n\n\nOBJECTIVE: Find paths along which all data reach their intended destinations, while minimizing the total cost. \n\n\n\nOUTPUT INFO:\n- \\var{total_cost} represents the total cost of all the paths\n- \\var{path_cost} represents the cost of the corresponding path\n- \\var{path_flow} represents the flow going through the corresponding path\n\nOUTPUT FORMAT:\n\n{\n    \"optimized_paths\": {\n        \"paths\": [\n            {\n                \"source\": k,\n                \"destination\": l,\n                \"route\": [k, i_1, i_2, ..., l],\n                \"path_flow\": path_flow\n                \"path_cost\": path_cost\n            },\n            for id in 1, ..., m \n        ],\n    \"total_cost\": \"total_cost\"\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"Paths must be established in a network of nodes where links have defined capacities and associated costs, ensuring data reach their intended destinations at specific rates.\", \"constraints\": [\"Data flow on a link cannot exceed its capacity\", \"Each link's data flow must be non-negative\", \"The sum of data rates on all links from each source node must be at least the required data rate for that source\", \"The sum of data rates on all links to each destination node must be at least the required data rate for that destination\", \"Flow conservation must be maintained at intermediate nodes (i.e., the amount of data entering a non-source, non-destination node on incoming links equals the data leaving on outgoing links)\"], \"objective\": \"Minimize the total cost of data transmission across all links\", \"description\": \"Find paths along which all data reach their intended destinations, while minimizing the total cost. The links between nodes are characterized by their capacities (\\\\param{Capacity}) and associated costs (\\\\param{Cost}), where each link i connects a start node (\\\\param{StartNode}_i) to an end node (\\\\param{EndNode}_i). There is a set number of data flow requirements (\\\\param{F}), each with a source node (\\\\param{Source}_j) and destination node (\\\\param{Destination}_j), and a specific data rate (\\\\param{DataRate}_j) that must be achieved.\", \"parameters\": [{\"definition\": \"The number of links between nodes in the network.\", \"symbol\": \"NumLinks\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The starting node for link ij\", \"symbol\": \"StartNode\", \"value\": \"\", \"shape\": [\"NumLinks\"]}, {\"definition\": \"The ending node for link ij\", \"symbol\": \"EndNode\", \"value\": \"\", \"shape\": [\"NumLinks\"]}, {\"definition\": \"The maximum capacity for link ij\", \"symbol\": \"Capacity\", \"value\": \"\", \"shape\": [\"NumLinks\"]}, {\"definition\": \"The cost for transporting data through link ij\", \"symbol\": \"Cost\", \"value\": \"\", \"shape\": [\"NumLinks\"]}, {\"definition\": \"The number of data flow requirements.\", \"symbol\": \"NumFlowReqs\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The source node for data flow kl\", \"symbol\": \"Source\", \"value\": \"\", \"shape\": [\"NumFlowReqs\"]}, {\"definition\": \"The destination node for data flow kl\", \"symbol\": \"Destination\", \"value\": \"\", \"shape\": [\"NumFlowReqs\"]}, {\"definition\": \"The rate of data flow for flow kl\", \"symbol\": \"DataRate\", \"value\": \"\", \"shape\": [\"NumFlowReqs\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: LP\n\nPROBLEM INFO: \n- Consider a set \\var{P} described by linear inequality constraints, that is:\n \\var{P} = {\\var{x} \\in R^\\var{N} | \\var{a_i}^T x <= \\var{b_i} , i = 1, ..., m}.\n\nwhere \\var{a_i} \\in R^\\var{N} and \\var{b_i} \\in R\n\n- A ball with center \\var{y} in R^\\var{N} and radius \\var{r} is defined as the set of all points within (Euclidean) distance \\var{r} from \\var{y}.\n\n\nINPUT FORMAT: \n\n{\n    \"A\": [[a_i_j for j in 1, ..., n] for i in 1, ..., m],\n    \"b\": [b_i for i in 1, ..., m]\n}\n\nOBJECTIVE: We are interested in finding a ball with the largest possible radius, which is entirely contained within the set \\var{P} (The center of such a ball is called the Chebychev center of \\var{P}.\n\nOUTPUT INFO:\n\n- center (list): The center of the ball as a list of floats of length \\var{N}\n- radius (float): The radius of the ball as a float\n\nOUTPUT FORMAT:\n\n{\n    \"center\": [y_j for j in 1, ..., n],\n    \"radius\": r\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The problem is to find the largest possible ball by radius, which is entirely contained within a given set P, where the center of this ball is referred to as the Chebychev center of P.\", \"constraints\": [\"The radii of balls are non-negative\", \"The ball must be completely within the set P, which is defined by the constraints Ax \\u2264 b\"], \"objective\": \"Maximize the radius r of the ball centered at the Chebychev center that lies entirely within P\", \"description\": \"PROBLEM TYPE\\nLP\\n\\nINPUT FORMAT \\n\\n{\\n    \\\"A\\\": [[a_i_j for j in 1, ..., N] for i in 1, ..., M],\\n    \\\"b\\\": [b_i for i in 1, ..., M]\\n}\\n\\nOBJECTIVE\\nWe are interested in finding a ball with the largest possible radius, which is entirely contained within the set \\\\param{P} (The center of such a ball is called the Chebychev center of \\\\param{P}).\", \"parameters\": [{\"definition\": \"The number of inequalities defining the set P\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The ambient space dimension of the set P\", \"symbol\": \"N\", \"value\": \"\", \"shape\": []}, {\"definition\": \"The coefficients of the linear inequalities defining the set P\", \"symbol\": \"A\", \"value\": \"\", \"shape\": [\"M\", \"N\"]}, {\"definition\": \"The right-hand side of the inequalities defining the set P\", \"symbol\": \"B\", \"value\": \"\", \"shape\": [\"M\"]}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MILP\nPROBLEM INFO:\n\n- An engineering factory makes several products on the machines, and the number of machine \\var{m} the factory has is \\var{num_{m}}.\n- Each product \\var{k} yields \\var{profit_{k}} to profit (defined as £/unit selling price minus cost of raw materials).\n- The unit production times (hours) product \\var{k} requires on machine \\var{m} is \\var{time_{k, m}}\n- In the present month (January) and several subsequent months, certain machines will be down for maintenance.\n- Each machine \\var{m} has to be down for \\var{down_{m}} months for maintenance.\n- There are marketing limitations on each product in each month. \n- The limitation of product \\var{k} in month \\var{i} is \\var{limit_{k, i}}.\n- It is possible to store up to 100 of each product at a time at a cost of \\var{store_price} per unit per month. \n- There are no stocks at present, but it is desired to have a stock of \\var{keep_quantity} of each type of product at the end of subsequent months.\n- The factory works a six days a week with two shifts of \\var{n_workhours} hours each day. \n- No sequencing problems need to be considered.\n- We can assume that a month has 24 days for convenience.\n\n\nINPUT FORMAT:\n\n{\n    \"num_machines\": [num_{m} for m in 1,...,M],\n    \"profit\": [profit_{k} for k in 1,...K],\n    \"time\": [[time_{k, m} for m in 1,...,M] for k in 1,...,K],\n    \"down\": [down_{m} for m in 1,...,M]\n    \"limit\": [[limit_{k, i} for i in 1,...,I] for k in 1,...,K],\n    \"store_price\": store_price,\n    \"keep_quantity\": keep_quantity,\n    \"n_workhours\": n_workhours\n}\n\nOBJECTIVE: What maintaining, selling, storing and manufacturing policy should the company pursue in order to maximize profit?\n\nOUTPUT INFO:\n\n- \\var{sell} represents the amount of selling quantity of each product in each month\n- \\var{manufacture} represents the amount of manufactured products in each month\n- \\var{storage} represents the storage of each product in each month\n- \\var{maintain} represents the number of machines in each type that are under maintenance in each month\n\nOUTPUT FORMAT:\n\n{\n    \"sell\": [[sell_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"manufacture\": [[manufacture_{k, i} for k in 1,...,K] for i in 1,...I],\n    \"storage\": [[storage_{k, i} for k in 1,...,K] for i in 1,...,I],\n    \"maintain\": [[maintain_{m, k} for m in 1,...,M] for k in 1,...,K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"The company aims to establish the best policy for maintaining equipment, manufacturing, storing, and selling products to maximize profits with limited machinery, work hours, and specific product constraints.\", \"constraints\": [\"Products must adhere to a production limit of Limit\", \"A minimum quantity of KeepQuantity must be kept in storage\", \"There are WorkHours work hours available for all machines combined\", \"The numbers of products manufactured, maintained, sold, and stored are non-negative\"], \"objective\": \"Maximize the company's profit from its manufacturing and sales operations while considering maintenance, storage and work hour constraints\", \"description\": \"What maintaining, selling, storing, and manufacturing policy should the company pursue in order to maximize profit? The company has \\\\param{M} machines, each with a specific downtime \\\\param{Downtime}. There are \\\\param{K} products, each with an associated profit \\\\param{Profit} and a production time on each machine given by \\\\param{Time}. Products must adhere to limits given by \\\\param{Limit}. The price for storing products is \\\\param{StorePrice}, and they must keep a quantity of \\\\param{KeepQuantity} in the store. The company has \\\\param{WorkHours} work hours available for all machines combined.\", \"parameters\": [{\"definition\": \"Number of machines\", \"symbol\": \"M\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Profit for each product\", \"symbol\": \"Profit\", \"value\": \"\", \"shape\": [\"K\"]}, {\"definition\": \"Time required to produce each product on each machine\", \"symbol\": \"Time\", \"value\": \"\", \"shape\": [\"K\", \"M\"]}, {\"definition\": \"Downtime for each machine\", \"symbol\": \"Downtime\", \"value\": \"\", \"shape\": [\"M\"]}, {\"definition\": \"Limit for each product on constraints\", \"symbol\": \"Limit\", \"value\": \"\", \"shape\": [\"K\", \"I\"]}, {\"definition\": \"Price for storing products\", \"symbol\": \"StorePrice\", \"value\": 0.33, \"shape\": []}, {\"definition\": \"Quantity of products to keep in store\", \"symbol\": \"KeepQuantity\", \"value\": \"\", \"shape\": []}, {\"definition\": \"Number of work hours available\", \"symbol\": \"WorkHours\", \"value\": \"\", \"shape\": []}]}"
      }
    ]
  },
  {
    "messages": [
      {
        "role": "system",
        "content": "This is an LLM Agent for optimization problems."
      },
      {
        "role": "user",
        "content": "PROBLEM TYPE: MIP\nPROBLEM INFO:\n\n- A mining company is going to continue operating in a certain area for the next years. \n- There are \\var{n_mines} mines in this area, but it can operate at most \\var{n_maxwork} in any one year. \n- Although a mine may not operate in a certain year, it is still necessary to keep it ‘open’, in the sense that royalties are payable, if it be operated in a future year. \n- Clearly, if a mine is not going to be worked again, it can be permanently closed down and no more royalties need be paid. \n- The yearly royalties payable on each mine kept ‘open’ is \\var{royalty_{k}} for mine \\var{k}.\n- There is an upper limit to the amount of ore, which can be extracted from each mine in a year. \n- The upper limit for mine \\var{k} is \\var{limit_{k}}.\n- The ore from the different mines is of varying quality.\n- This quality is measured on a scale so that blending ores together results in a linear combination of the quality measurements, for example, if equal quantities of two ores were combined, the resultant ore would have a quality measurement half way between\nthat of the ingredient ores. \n- The quality of ore from mine \\var{k} is \\var{quality_{k}}.\n- In each year, it is necessary to combine the total outputs from each mine to produce a blended ore of exactly some stipulated quality.\n- In year \\var{i}, the required quality is \\var{requiredquality_{i}}.\n- The final blended ore sells for \\var{price} ton each year. \n- Revenue and expenditure for future years must be discounted at a rate of \\var{discount} per annum.\n\nINPUT FORMAT:\n\n{\n    \"n_mines\": n_mines,\n    \"n_maxwork\": n_maxwork,\n    \"royalty\": [royalty_{k} for k in 1,...,K],\n    \"limit\": [limit_{k} for k in 1,...,K],\n    \"quality\": [quality_{k} for k in 1,...,K],\n    \"requiredquality\": [requiredquality_{i} for i in 1,...,I],\n    \"price\": price,\n    \"discount\": discount\n}\n\n\nOBJECTIVE: To maximize profit, which mines should be operated each year and how much should they produce?\n\nOUTPUT INFO:\n\n- \\var{isoperated} represents whether each mine is operated in each year\n- \\var{amount} represents the amount of ore produced by each mine in each year\n\nOUTPUT FORMAT:\n\n{\n    \"isoperated\": [[isoperated_{k, i} for i in 1,...,I] for k in 1,...K]\n    \"amount\": [[amount_{k, i} for i in 1,...,I] for k in 1,...K]\n}"
      },
      {
        "role": "assistant",
        "content": "{\"background\": \"A mining company needs to select which mines to operate and determine the production output to maximize profit, considering operational constraints and meeting clients' required material quality.\", \"constraints\": [\"Number of operated mines does not exceed MaxWork\", \"Each mine k produces a non-negative amount of material\", \"Each mine k has a production limit of Limit\", \"The quality of material from each mine k is at least as high as RequiredQuality for each client i\"], \"objective\": \"Maximize the company's profit from operating the mines and selling the material produced while adhering to the constraints of mine operations and client quality requirements\", \"description\": \"To maximize profit, which mines should be operated each year and how much should they produce? The company has \\\\param{K} mines and can operate at most \\\\param{MaxWork} in any given year. For each mine k, there is a royalty cost of \\\\param{Royalty}, a production limit of \\\\param{Limit}, and the material extracted has a quality of \\\\param{Quality}. Each client i requires a material with at least \\\\param{RequiredQuality}. The price per unit of material sold is \\\\param{Price}, with a discount \\\\param{Discount} applied to the royalty cost for each unit sold.\", \"parameters\": [{\"definition\": \"Number of mines\", \"symbol\": \"K\", \"value\": 0, \"shape\": []}, {\"definition\": \"Maximum number of mines that can be operated in a year\", \"symbol\": \"MaxWork\", \"value\": 0, \"shape\": []}, {\"definition\": \"Royalty cost for operating mine k\", \"symbol\": \"Royalty\", \"value\": 0, \"shape\": [\"K\"]}, {\"definition\": \"Production limit for mine k\", \"symbol\": \"Limit\", \"value\": 0, \"shape\": [\"K\"]}, {\"definition\": \"Quality of the material from mine k\", \"symbol\": \"Quality\", \"value\": 0, \"shape\": [\"K\"]}, {\"definition\": \"Required quality of the material for client i\", \"symbol\": \"RequiredQuality\", \"value\": 0, \"shape\": [\"I\"]}, {\"definition\": \"Price per unit of material sold\", \"symbol\": \"Price\", \"value\": 0, \"shape\": []}, {\"definition\": \"Discount on the royalty cost per unit of material sold\", \"symbol\": \"Discount\", \"value\": 0, \"shape\": []}]}"
      }
    ]
  }
]
